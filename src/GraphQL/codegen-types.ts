import { FieldPolicy, FieldReadFunction, TypePolicies, TypePolicy } from '@apollo/client/cache';
export type Maybe<T> = T;
export type InputMaybe<T> = T;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
};

/** A Pokémon's abilities entry */
export type Abilities = {
  __typename: 'Abilities';
  /** The first ability of a Pokémon */
  first: Scalars['String'];
  /** The hidden ability of a Pokémon */
  hidden?: Maybe<Scalars['String']>;
  /** The second ability of a Pokémon */
  second?: Maybe<Scalars['String']>;
  /** The special ability of a Pokémon */
  special?: Maybe<Scalars['String']>;
};

/** The supported abilities */
export enum AbilitiesEnum {
  ADAPTABILITY = 'adaptability',
  AERILATE = 'aerilate',
  AFTERMATH = 'aftermath',
  AIRLOCK = 'airlock',
  ANALYTIC = 'analytic',
  ANGERPOINT = 'angerpoint',
  ANTICIPATION = 'anticipation',
  ARENATRAP = 'arenatrap',
  AROMAVEIL = 'aromaveil',
  ASONEASONEGLASTRIER = 'asoneasoneglastrier',
  ASONESPECTRIER = 'asonespectrier',
  AURABREAK = 'aurabreak',
  BADDREAMS = 'baddreams',
  BALLFETCH = 'ballfetch',
  BATTERY = 'battery',
  BATTLEARMOR = 'battlearmor',
  BATTLEBOND = 'battlebond',
  BEASTBOOST = 'beastboost',
  BERSERK = 'berserk',
  BIGPECKS = 'bigpecks',
  BLAZE = 'blaze',
  BULLETPROOF = 'bulletproof',
  CHEEKPOUCH = 'cheekpouch',
  CHILLINGNEIGH = 'chillingneigh',
  CHLOROPHYLL = 'chlorophyll',
  CLEARBODY = 'clearbody',
  CLOUDNINE = 'cloudnine',
  COLORCHANGE = 'colorchange',
  COMATOSE = 'comatose',
  COMPETITIVE = 'competitive',
  COMPOUNDEYES = 'compoundeyes',
  CONTRARY = 'contrary',
  CORROSION = 'corrosion',
  COTTONDOWN = 'cottondown',
  CURIOUSMEDICINE = 'curiousmedicine',
  CURSEDBODY = 'cursedbody',
  CUTECHARM = 'cutecharm',
  DAMP = 'damp',
  DANCER = 'dancer',
  DARKAURA = 'darkaura',
  DAUNTLESSSHIELD = 'dauntlessshield',
  DAZZLING = 'dazzling',
  DEFEATIST = 'defeatist',
  DEFIANT = 'defiant',
  DELTASTREAM = 'deltastream',
  DESOLATELAND = 'desolateland',
  DISGUISE = 'disguise',
  DOWNLOAD = 'download',
  DRAGONSMAW = 'dragonsmaw',
  DRIZZLE = 'drizzle',
  DROUGHT = 'drought',
  DRYSKIN = 'dryskin',
  EARLYBIRD = 'earlybird',
  EFFECTSPORE = 'effectspore',
  ELECTRICSURGE = 'electricsurge',
  EMERGENCYEXIT = 'emergencyexit',
  FAIRYAURA = 'fairyaura',
  FILTER = 'filter',
  FLAMEBODY = 'flamebody',
  FLAREBOOST = 'flareboost',
  FLASHFIRE = 'flashfire',
  FLOWERGIFT = 'flowergift',
  FLOWERVEIL = 'flowerveil',
  FLUFFY = 'fluffy',
  FORECAST = 'forecast',
  FOREWARN = 'forewarn',
  FRIENDGUARD = 'friendguard',
  FRISK = 'frisk',
  FULLMETALBODY = 'fullmetalbody',
  FURCOAT = 'furcoat',
  GALEWINGS = 'galewings',
  GALVANIZE = 'galvanize',
  GLUTTONY = 'gluttony',
  GOOEY = 'gooey',
  GORILLATACTICS = 'gorillatactics',
  GRASSPELT = 'grasspelt',
  GRASSYSURGE = 'grassysurge',
  GRIMNEIGH = 'grimneigh',
  GULPMISSILE = 'gulpmissile',
  GUTS = 'guts',
  HARVEST = 'harvest',
  HEALER = 'healer',
  HEATPROOF = 'heatproof',
  HEAVYMETAL = 'heavymetal',
  HONEYGATHER = 'honeygather',
  HUGEPOWER = 'hugepower',
  HUNGERSWITCH = 'hungerswitch',
  HUSTLE = 'hustle',
  HYDRATION = 'hydration',
  HYPERCUTTER = 'hypercutter',
  ICEBODY = 'icebody',
  ICEFACE = 'iceface',
  ICESCALES = 'icescales',
  ILLUMINATE = 'illuminate',
  ILLUSION = 'illusion',
  IMMUNITY = 'immunity',
  IMPOSTER = 'imposter',
  INFILTRATOR = 'infiltrator',
  INNARDSOUT = 'innardsout',
  INNERFOCUS = 'innerfocus',
  INSOMNIA = 'insomnia',
  INTIMIDATE = 'intimidate',
  INTREPIDSWORD = 'intrepidsword',
  IRONBARBS = 'ironbarbs',
  IRONFIST = 'ironfist',
  JUSTIFIED = 'justified',
  KEENEYE = 'keeneye',
  KLUTZ = 'klutz',
  LEAFGUARD = 'leafguard',
  LEVITATE = 'levitate',
  LIBERO = 'libero',
  LIGHTMETAL = 'lightmetal',
  LIGHTNINGROD = 'lightningrod',
  LIMBER = 'limber',
  LIQUIDOOZE = 'liquidooze',
  LIQUIDVOICE = 'liquidvoice',
  LONGREACH = 'longreach',
  MAGICBOUNCE = 'magicbounce',
  MAGICGUARD = 'magicguard',
  MAGICIAN = 'magician',
  MAGMAARMOR = 'magmaarmor',
  MAGNETPULL = 'magnetpull',
  MARVELSCALE = 'marvelscale',
  MEGALAUNCHER = 'megalauncher',
  MERCILESS = 'merciless',
  MIMICRY = 'mimicry',
  MINUS = 'minus',
  MIRRORARMOR = 'mirrorarmor',
  MISTYSURGE = 'mistysurge',
  MOLDBREAKER = 'moldbreaker',
  MOODY = 'moody',
  MOTORDRIVE = 'motordrive',
  MOUNTAINEER = 'mountaineer',
  MOXIE = 'moxie',
  MULTISCALE = 'multiscale',
  MULTITYPE = 'multitype',
  MUMMY = 'mummy',
  NATURALCURE = 'naturalcure',
  NEUROFORCE = 'neuroforce',
  NEUTRALIZINGGAS = 'neutralizinggas',
  NOABILITY = 'noability',
  NOGUARD = 'noguard',
  NORMALIZE = 'normalize',
  OBLIVIOUS = 'oblivious',
  OVERCOAT = 'overcoat',
  OVERGROW = 'overgrow',
  OWNTEMPO = 'owntempo',
  PARENTALBOND = 'parentalbond',
  PASTELVEIL = 'pastelveil',
  PERISHBODY = 'perishbody',
  PERSISTENT = 'persistent',
  PICKPOCKET = 'pickpocket',
  PICKUP = 'pickup',
  PIXILATE = 'pixilate',
  PLUS = 'plus',
  POISONHEAL = 'poisonheal',
  POISONPOINT = 'poisonpoint',
  POISONTOUCH = 'poisontouch',
  POWERCONSTRUCT = 'powerconstruct',
  POWEROFALCHEMY = 'powerofalchemy',
  POWERSPOT = 'powerspot',
  PRANKSTER = 'prankster',
  PRESSURE = 'pressure',
  PRIMORDIALSEA = 'primordialsea',
  PRISMARMOR = 'prismarmor',
  PROPELLERTAIL = 'propellertail',
  PROTEAN = 'protean',
  PSYCHICSURGE = 'psychicsurge',
  PUNKROCK = 'punkrock',
  PUREPOWER = 'purepower',
  QUEENLYMAJESTY = 'queenlymajesty',
  QUICKDRAW = 'quickdraw',
  QUICKFEET = 'quickfeet',
  RAINDISH = 'raindish',
  RATTLED = 'rattled',
  REBOUND = 'rebound',
  RECEIVER = 'receiver',
  RECKLESS = 'reckless',
  REFRIGERATE = 'refrigerate',
  REGENERATOR = 'regenerator',
  RIPEN = 'ripen',
  RIVALRY = 'rivalry',
  RKSSYSTEM = 'rkssystem',
  ROCKHEAD = 'rockhead',
  ROUGHSKIN = 'roughskin',
  RUNAWAY = 'runaway',
  SANDFORCE = 'sandforce',
  SANDRUSH = 'sandrush',
  SANDSPIT = 'sandspit',
  SANDSTREAM = 'sandstream',
  SANDVEIL = 'sandveil',
  SAPSIPPER = 'sapsipper',
  SCHOOLING = 'schooling',
  SCRAPPY = 'scrappy',
  SCREENCLEANER = 'screencleaner',
  SERENEGRACE = 'serenegrace',
  SHADOWSHIELD = 'shadowshield',
  SHADOWTAG = 'shadowtag',
  SHEDSKIN = 'shedskin',
  SHEERFORCE = 'sheerforce',
  SHELLARMOR = 'shellarmor',
  SHIELDDUST = 'shielddust',
  SHIELDSDOWN = 'shieldsdown',
  SIMPLE = 'simple',
  SKILLLINK = 'skilllink',
  SLOWSTART = 'slowstart',
  SLUSHRUSH = 'slushrush',
  SNIPER = 'sniper',
  SNOWCLOAK = 'snowcloak',
  SNOWWARNING = 'snowwarning',
  SOLARPOWER = 'solarpower',
  SOLIDROCK = 'solidrock',
  SOULHEART = 'soulheart',
  SOUNDPROOF = 'soundproof',
  SPEEDBOOST = 'speedboost',
  STAKEOUT = 'stakeout',
  STALL = 'stall',
  STALWART = 'stalwart',
  STAMINA = 'stamina',
  STANCECHANGE = 'stancechange',
  STATIC = 'static',
  STEADFAST = 'steadfast',
  STEAMENGINE = 'steamengine',
  STEELWORKER = 'steelworker',
  STEELYSPIRIT = 'steelyspirit',
  STENCH = 'stench',
  STICKYHOLD = 'stickyhold',
  STORMDRAIN = 'stormdrain',
  STRONGJAW = 'strongjaw',
  STURDY = 'sturdy',
  SUCTIONCUPS = 'suctioncups',
  SUPERLUCK = 'superluck',
  SURGESURFER = 'surgesurfer',
  SWARM = 'swarm',
  SWEETVEIL = 'sweetveil',
  SWIFTSWIM = 'swiftswim',
  SYMBIOSIS = 'symbiosis',
  SYNCHRONIZE = 'synchronize',
  TANGLEDFEET = 'tangledfeet',
  TANGLINGHAIR = 'tanglinghair',
  TECHNICIAN = 'technician',
  TELEPATHY = 'telepathy',
  TERAVOLT = 'teravolt',
  THICKFAT = 'thickfat',
  TINTEDLENS = 'tintedlens',
  TORRENT = 'torrent',
  TOUGHCLAWS = 'toughclaws',
  TOXICBOOST = 'toxicboost',
  TRACE = 'trace',
  TRANSISTOR = 'transistor',
  TRIAGE = 'triage',
  TRUANT = 'truant',
  TURBOBLAZE = 'turboblaze',
  UNAWARE = 'unaware',
  UNBURDEN = 'unburden',
  UNNERVE = 'unnerve',
  UNSEENFIST = 'unseenfist',
  VICTORYSTAR = 'victorystar',
  VITALSPIRIT = 'vitalspirit',
  VOLTABSORB = 'voltabsorb',
  WANDERINGSPIRIT = 'wanderingspirit',
  WATERABSORB = 'waterabsorb',
  WATERBUBBLE = 'waterbubble',
  WATERCOMPACTION = 'watercompaction',
  WATERVEIL = 'waterveil',
  WEAKARMOR = 'weakarmor',
  WHITESMOKE = 'whitesmoke',
  WIMPOUT = 'wimpout',
  WONDERGUARD = 'wonderguard',
  WONDERSKIN = 'wonderskin',
  ZENMODE = 'zenmode'
}

/** A single Pokémon ability entry */
export type Ability = {
  __typename: 'Ability';
  /** Bulbapedia page for an ability */
  bulbapediaPage: Scalars['String'];
  /** The long description for an ability */
  desc?: Maybe<Scalars['String']>;
  /** Whether this ability has effects outside of battle, and if so what the effect is */
  isFieldAbility?: Maybe<Scalars['String']>;
  /** The key of the ability as stored in the API */
  key: AbilitiesEnum;
  /** The name for an ability */
  name: Scalars['String'];
  /** Serebii page for an ability */
  serebiiPage: Scalars['String'];
  /** The short description for an ability */
  shortDesc: Scalars['String'];
  /** Smogon page for an ability */
  smogonPage: Scalars['String'];
};

/** A Pokémon catch rate entry */
export type CatchRate = {
  __typename: 'CatchRate';
  /** The base catch rate for a Pokémon that will be used to calculate the final catch rate */
  base: Scalars['Int'];
  /** The chance to capture a Pokémon when an ordinary Poké Ball is thrown at full health without any status condition */
  percentageWithOrdinaryPokeballAtFullHealth: Scalars['String'];
};

/** A Pokémon's EV yields */
export type EvYields = {
  __typename: 'EvYields';
  /** The attack EV yield of a Pokémon */
  attack: Scalars['Int'];
  /** The defense EV yield of a Pokémon */
  defense: Scalars['Int'];
  /** The HP EV yield of a pokémon */
  hp: Scalars['Int'];
  /** The special attack EV yield of a Pokémon */
  specialattack: Scalars['Int'];
  /** The special defense EV yield of a Pokémon */
  specialdefense: Scalars['Int'];
  /** The speed EV yield of a Pokémon */
  speed: Scalars['Int'];
};

/** A flavor text entry for a Pokémon */
export type Flavor = {
  __typename: 'Flavor';
  /** The flavor text for this entry */
  flavor: Scalars['String'];
  /** The name of the game this flavor text is from */
  game: Scalars['String'];
};

/** A Pokémon gender ratio entry */
export type Gender = {
  __typename: 'Gender';
  /** The percentage for female occurrences */
  female: Scalars['String'];
  /** The percentage of male occurrences */
  male: Scalars['String'];
};

/** A single item entry */
export type Item = {
  __typename: 'Item';
  /** Bulbapedia page for an item */
  bulbapediaPage: Scalars['String'];
  /** The long description for an item */
  desc: Scalars['String'];
  /** The generation in which this item was introduced */
  generationIntroduced: Scalars['Int'];
  /** Whether an item is non-standard, and if it is why */
  isNonstandard?: Maybe<Scalars['String']>;
  /** The key of the item as stored in the API */
  key: ItemsEnum;
  /** The name for an item */
  name: Scalars['String'];
  /** Serebii page for an item */
  serebiiPage: Scalars['String'];
  /** The long description for an item */
  shortDesc?: Maybe<Scalars['String']>;
  /** Smogon page for an item */
  smogonPage?: Maybe<Scalars['String']>;
  /** The sprite for an item */
  sprite: Scalars['String'];
};

/** The supported items */
export enum ItemsEnum {
  ABOMASITE = 'abomasite',
  ABSOLITE = 'absolite',
  ABSORBBULB = 'absorbbulb',
  ACROBIKE = 'acrobike',
  ADAMANTORB = 'adamantorb',
  ADRENALINEORB = 'adrenalineorb',
  ADVENTUREGUIDE = 'adventureguide',
  AERODACTYLITE = 'aerodactylite',
  AGGRONITE = 'aggronite',
  AGUAVBERRY = 'aguavberry',
  AIRBALLOON = 'airballoon',
  ALAKAZITE = 'alakazite',
  ALORAICHIUMZ = 'aloraichiumz',
  ALTARIANITE = 'altarianite',
  AMPHAROSITE = 'ampharosite',
  APICOTBERRY = 'apicotberry',
  APRICORNBOX = 'apricornbox',
  AQUASUIT = 'aquasuit',
  ARMORFOSSIL = 'armorfossil',
  ASPEARBERRY = 'aspearberry',
  ASSAULTVEST = 'assaultvest',
  AUDINITE = 'audinite',
  AURORATICKET = 'auroraticket',
  AUTOGRAPH = 'autograph',
  AZUREFLUTE = 'azureflute',
  BABIRIBERRY = 'babiriberry',
  BANDAUTOGRAPH = 'bandautograph',
  BANETTITE = 'banettite',
  BASEMENTKEY = 'basementkey',
  BEASTBALL = 'beastball',
  BEEDRILLITE = 'beedrillite',
  BELUEBERRY = 'belueberry',
  BERRY = 'berry',
  BERRYJUICE = 'berryjuice',
  BERRYPOTS = 'berrypots',
  BERRYPOUCH = 'berrypouch',
  BERRYSWEET = 'berrysweet',
  BERSERKGENE = 'berserkgene',
  BICYCLE = 'bicycle',
  BIGROOT = 'bigroot',
  BIKEVOUCHER = 'bikevoucher',
  BINDINGBAND = 'bindingband',
  BITTERBERRY = 'bitterberry',
  BLACKBELT = 'blackbelt',
  BLACKGLASSES = 'blackglasses',
  BLACKSLUDGE = 'blacksludge',
  BLASTOISINITE = 'blastoisinite',
  BLAZIKENITE = 'blazikenite',
  BLUECARD = 'bluecard',
  BLUEORB = 'blueorb',
  BLUEPETAL = 'bluepetal',
  BLUKBERRY = 'blukberry',
  BLUNDERPOLICY = 'blunderpolicy',
  BOTTLECAP = 'bottlecap',
  BRIGHTPOWDER = 'brightpowder',
  BUGGEM = 'buggem',
  BUGINIUMZ = 'buginiumz',
  BUGMEMORY = 'bugmemory',
  BURNDRIVE = 'burndrive',
  BURNTBERRY = 'burntberry',
  CAMERUPTITE = 'cameruptite',
  CAMPINGGEAR = 'campinggear',
  CARDKEY = 'cardkey',
  CATCHINGCHARM = 'catchingcharm',
  CELLBATTERY = 'cellbattery',
  CHARCOAL = 'charcoal',
  CHARIZARDITEX = 'charizarditex',
  CHARIZARDITEY = 'charizarditey',
  CHARTIBERRY = 'chartiberry',
  CHERIBERRY = 'cheriberry',
  CHERISHBALL = 'cherishball',
  CHESTOBERRY = 'chestoberry',
  CHILANBERRY = 'chilanberry',
  CHILLDRIVE = 'chilldrive',
  CHIPPEDPOT = 'chippedpot',
  CHOICEBAND = 'choiceband',
  CHOICESCARF = 'choicescarf',
  CHOICESPECS = 'choicespecs',
  CHOPLEBERRY = 'chopleberry',
  CLAWFOSSIL = 'clawfossil',
  CLEARBELL = 'clearbell',
  CLOVERSWEET = 'cloversweet',
  COBABERRY = 'cobaberry',
  COINCASE = 'coincase',
  COLBURBERRY = 'colburberry',
  COLRESSMCHN = 'colressmchn',
  CONTESTCOSTUME = 'contestcostume',
  CONTESTPASS = 'contestpass',
  CORNNBERRY = 'cornnberry',
  COUPON1 = 'coupon1',
  COUPON2 = 'coupon2',
  COUPON3 = 'coupon3',
  COVERFOSSIL = 'coverfossil',
  CRACKEDPOT = 'crackedpot',
  CRUCIBELLITE = 'crucibellite',
  CUSTAPBERRY = 'custapberry',
  DAMPROCK = 'damprock',
  DARKGEM = 'darkgem',
  DARKINIUMZ = 'darkiniumz',
  DARKMEMORY = 'darkmemory',
  DARKSTONE = 'darkstone',
  DAWNSTONE = 'dawnstone',
  DECIDIUMZ = 'decidiumz',
  DEEPSEASCALE = 'deepseascale',
  DEEPSEATOOTH = 'deepseatooth',
  DESTINYKNOT = 'destinyknot',
  DEVONGOODS = 'devongoods',
  DEVONPARTS = 'devonparts',
  DEVONSCOPE = 'devonscope',
  DEVONSCUBAGEAR = 'devonscubagear',
  DIANCITE = 'diancite',
  DIVEBALL = 'diveball',
  DNASPLICERS = 'dnasplicers',
  DOMEFOSSIL = 'domefossil',
  DOUSEDRIVE = 'dousedrive',
  DOWSINGMACHINE = 'dowsingmachine',
  DOWSINGMCHN = 'dowsingmchn',
  DRACOPLATE = 'dracoplate',
  DRAGONFANG = 'dragonfang',
  DRAGONGEM = 'dragongem',
  DRAGONIUMZ = 'dragoniumz',
  DRAGONMEMORY = 'dragonmemory',
  DRAGONSCALE = 'dragonscale',
  DRAGONSKULL = 'dragonskull',
  DREADPLATE = 'dreadplate',
  DREAMBALL = 'dreamball',
  DROPPEDITEM = 'droppeditem',
  DUBIOUSDISC = 'dubiousdisc',
  DURINBERRY = 'durinberry',
  DUSKBALL = 'duskball',
  DUSKSTONE = 'duskstone',
  DYNAMAXBAND = 'dynamaxband',
  EARTHPLATE = 'earthplate',
  EEVIUMZ = 'eeviumz',
  EGGCARD = 'eggcard',
  EJECTBUTTON = 'ejectbutton',
  EJECTPACK = 'ejectpack',
  ELECTIRIZER = 'electirizer',
  ELECTRICGEM = 'electricgem',
  ELECTRICMEMORY = 'electricmemory',
  ELECTRICSEED = 'electricseed',
  ELECTRIUMZ = 'electriumz',
  ELEVATORKEY = 'elevatorkey',
  ENDORSEMENT = 'endorsement',
  ENERGYPOWDER = 'energypowder',
  ENIGMABERRY = 'enigmaberry',
  ENIGMASTONE = 'enigmastone',
  ENIGMATICCARD = 'enigmaticcard',
  EONFLUTE = 'eonflute',
  EONTICKET = 'eonticket',
  ESCAPEROPE = 'escaperope',
  EVIOLITE = 'eviolite',
  EXPERTBELT = 'expertbelt',
  EXPLORERKIT = 'explorerkit',
  EXPSHARE = 'expshare',
  FAIRIUMZ = 'fairiumz',
  FAIRYGEM = 'fairygem',
  FAIRYMEMORY = 'fairymemory',
  FAMECHECKER = 'famechecker',
  FASHIONCASE = 'fashioncase',
  FASTBALL = 'fastball',
  FIGHTINGGEM = 'fightinggem',
  FIGHTINGMEMORY = 'fightingmemory',
  FIGHTINIUMZ = 'fightiniumz',
  FIGYBERRY = 'figyberry',
  FIREGEM = 'firegem',
  FIREMEMORY = 'firememory',
  FIRESTONE = 'firestone',
  FIRIUMZ = 'firiumz',
  FISHINGROD = 'fishingrod',
  FISTPLATE = 'fistplate',
  FLAMEORB = 'flameorb',
  FLAMEPLATE = 'flameplate',
  FLOATSTONE = 'floatstone',
  FLOWERSWEET = 'flowersweet',
  FLYINGGEM = 'flyinggem',
  FLYINGMEMORY = 'flyingmemory',
  FLYINIUMZ = 'flyiniumz',
  FOCUSBAND = 'focusband',
  FOCUSSASH = 'focussash',
  FORAGEBAG = 'foragebag',
  FOSSILIZEDBIRD = 'fossilizedbird',
  FOSSILIZEDDINO = 'fossilizeddino',
  FOSSILIZEDDRAKE = 'fossilizeddrake',
  FOSSILIZEDFISH = 'fossilizedfish',
  FRIENDBALL = 'friendball',
  FULLINCENSE = 'fullincense',
  FULLRESTORE = 'fullrestore',
  GALACTICKEY = 'galactickey',
  GALARICACUFF = 'galaricacuff',
  GALARICAWREATH = 'galaricawreath',
  GALLADITE = 'galladite',
  GANLONBERRY = 'ganlonberry',
  GARCHOMPITE = 'garchompite',
  GARDEVOIRITE = 'gardevoirite',
  GBSOUNDS = 'gbsounds',
  GENGARITE = 'gengarite',
  GHOSTGEM = 'ghostgem',
  GHOSTIUMZ = 'ghostiumz',
  GHOSTMEMORY = 'ghostmemory',
  GLALITITE = 'glalitite',
  GODSTONE = 'godstone',
  GOGOGGLES = 'gogoggles',
  GOLDBERRY = 'goldberry',
  GOLDBOTTLECAP = 'goldbottlecap',
  GOLDTEETH = 'goldteeth',
  GOODROD = 'goodrod',
  GRACIDEA = 'gracidea',
  GRAM1 = 'gram1',
  GRAM2 = 'gram2',
  GRAM3 = 'gram3',
  GRASSGEM = 'grassgem',
  GRASSIUMZ = 'grassiumz',
  GRASSMEMORY = 'grassmemory',
  GRASSYSEED = 'grassyseed',
  GREATBALL = 'greatball',
  GREENPETAL = 'greenpetal',
  GREPABERRY = 'grepaberry',
  GRIPCLAW = 'gripclaw',
  GRISEOUSORB = 'griseousorb',
  GROUNDGEM = 'groundgem',
  GROUNDIUMZ = 'groundiumz',
  GROUNDMEMORY = 'groundmemory',
  GRUBBYHANKY = 'grubbyhanky',
  GSBALL = 'gsball',
  GYARADOSITE = 'gyaradosite',
  HABANBERRY = 'habanberry',
  HARDSTONE = 'hardstone',
  HEALBALL = 'healball',
  HEATROCK = 'heatrock',
  HEAVYBALL = 'heavyball',
  HEAVYDUTYBOOTS = 'heavydutyboots',
  HELIXFOSSIL = 'helixfossil',
  HERACRONITE = 'heracronite',
  HITECHEARBUDS = 'hitechearbuds',
  HOLOCASTER = 'holocaster',
  HONDEWBERRY = 'hondewberry',
  HONOROFKALOS = 'honorofkalos',
  HOUNDOOMINITE = 'houndoominite',
  HYPERPOTION = 'hyperpotion',
  IAPAPABERRY = 'iapapaberry',
  ICEBERRY = 'iceberry',
  ICEGEM = 'icegem',
  ICEMEMORY = 'icememory',
  ICESTONE = 'icestone',
  ICICLEPLATE = 'icicleplate',
  ICIUMZ = 'iciumz',
  ICYROCK = 'icyrock',
  ILIMASNORMALIUMZ = 'ilimasnormaliumz',
  INCINIUMZ = 'inciniumz',
  INSECTPLATE = 'insectplate',
  INTRIGUINGSTONE = 'intriguingstone',
  IRONBALL = 'ironball',
  IRONPLATE = 'ironplate',
  ITEMFINDER = 'itemfinder',
  JABOCABERRY = 'jabocaberry',
  JADEORB = 'jadeorb',
  JAWFOSSIL = 'jawfossil',
  JOURNAL = 'journal',
  KANGASKHANITE = 'kangaskhanite',
  KASIBBERRY = 'kasibberry',
  KEBIABERRY = 'kebiaberry',
  KEEBERRY = 'keeberry',
  KELPSYBERRY = 'kelpsyberry',
  KEYSTONE = 'keystone',
  KEYTOROOM1 = 'keytoroom1',
  KEYTOROOM2 = 'keytoroom2',
  KEYTOROOM4 = 'keytoroom4',
  KEYTOROOM6 = 'keytoroom6',
  KINGSROCK = 'kingsrock',
  KOMMONIUMZ = 'kommoniumz',
  LAGGINGTAIL = 'laggingtail',
  LANSATBERRY = 'lansatberry',
  LATIASITE = 'latiasite',
  LATIOSITE = 'latiosite',
  LAXINCENSE = 'laxincense',
  LEAFSTONE = 'leafstone',
  LEEK = 'leek',
  LEFTOVERS = 'leftovers',
  LEFTPOKEBALL = 'leftpokeball',
  LEGENDPLATE = 'legendplate',
  LENSCASE = 'lenscase',
  LEPPABERRY = 'leppaberry',
  LETTER = 'letter',
  LEVELBALL = 'levelball',
  LIBERTYPASS = 'libertypass',
  LIECHIBERRY = 'liechiberry',
  LIFEORB = 'lifeorb',
  LIFTKEY = 'liftkey',
  LIGHTBALL = 'lightball',
  LIGHTCLAY = 'lightclay',
  LIGHTSTONE = 'lightstone',
  LOCKCAPSULE = 'lockcapsule',
  LOOKERTICKET = 'lookerticket',
  LOOTSACK = 'lootsack',
  LOPUNNITE = 'lopunnite',
  LOSTITEM = 'lostitem',
  LOVEBALL = 'loveball',
  LOVESWEET = 'lovesweet',
  LUCARIONITE = 'lucarionite',
  LUCKYPUNCH = 'luckypunch',
  LUMBERRY = 'lumberry',
  LUMINOUSMOSS = 'luminousmoss',
  LUNALIUMZ = 'lunaliumz',
  LUNARWING = 'lunarwing',
  LUREBALL = 'lureball',
  LUSTROUSORB = 'lustrousorb',
  LUXURYBALL = 'luxuryball',
  LYCANIUMZ = 'lycaniumz',
  MACHBIKE = 'machbike',
  MACHINEPART = 'machinepart',
  MACHOBRACE = 'machobrace',
  MAGMAEMBLEM = 'magmaemblem',
  MAGMARIZER = 'magmarizer',
  MAGMASTONE = 'magmastone',
  MAGMASUIT = 'magmasuit',
  MAGNET = 'magnet',
  MAGOBERRY = 'magoberry',
  MAGOSTBERRY = 'magostberry',
  MAIL = 'mail',
  MAKEUPBAG = 'makeupbag',
  MANECTITE = 'manectite',
  MARANGABERRY = 'marangaberry',
  MARSHADIUMZ = 'marshadiumz',
  MASTERBALL = 'masterball',
  MAWILITE = 'mawilite',
  MAXPOTION = 'maxpotion',
  MEADOWPLATE = 'meadowplate',
  MEDALBOX = 'medalbox',
  MEDICHAMITE = 'medichamite',
  MEGABRACELET = 'megabracelet',
  MEGARING = 'megaring',
  MEMBERCARD = 'membercard',
  MENTALHERB = 'mentalherb',
  METAGROSSITE = 'metagrossite',
  METALCOAT = 'metalcoat',
  METALPOWDER = 'metalpowder',
  METEORITE = 'meteorite',
  METEORITESHARD = 'meteoriteshard',
  METRONOME = 'metronome',
  MEWNIUMZ = 'mewniumz',
  MEWTWONITEX = 'mewtwonitex',
  MEWTWONITEY = 'mewtwonitey',
  MICLEBERRY = 'micleberry',
  MIMIKIUMZ = 'mimikiumz',
  MINDPLATE = 'mindplate',
  MINTBERRY = 'mintberry',
  MIRACLEBERRY = 'miracleberry',
  MIRACLESEED = 'miracleseed',
  MISTYSEED = 'mistyseed',
  MOONBALL = 'moonball',
  MOONFLUTE = 'moonflute',
  MOONSTONE = 'moonstone',
  MUSCLEBAND = 'muscleband',
  MYSTERYBERRY = 'mysteryberry',
  MYSTERYEGG = 'mysteryegg',
  MYSTICTICKET = 'mysticticket',
  MYSTICWATER = 'mysticwater',
  NANABBERRY = 'nanabberry',
  NESTBALL = 'nestball',
  NETBALL = 'netball',
  NEVERMELTICE = 'nevermeltice',
  NLUNARIZER = 'nlunarizer',
  NOMELBERRY = 'nomelberry',
  NORMALGEM = 'normalgem',
  NORMALIUMZ = 'normaliumz',
  NSOLARIZER = 'nsolarizer',
  OAKSLETTER = 'oaksletter',
  OAKSPARCEL = 'oaksparcel',
  OCCABERRY = 'occaberry',
  ODDINCENSE = 'oddincense',
  OLDAMBER = 'oldamber',
  OLDCHARM = 'oldcharm',
  OLDLETTER = 'oldletter',
  OLDROD = 'oldrod',
  OLDSEAMAP = 'oldseamap',
  ORANBERRY = 'oranberry',
  ORANGEPETAL = 'orangepetal',
  OVALCHARM = 'ovalcharm',
  OVALSTONE = 'ovalstone',
  PAIROFTICKETS = 'pairoftickets',
  PALPAD = 'palpad',
  PAMTREBERRY = 'pamtreberry',
  PARCEL = 'parcel',
  PARKBALL = 'parkball',
  PASS = 'pass',
  PASSHOBERRY = 'passhoberry',
  PAYAPABERRY = 'payapaberry',
  PECHABERRY = 'pechaberry',
  PERMIT = 'permit',
  PERSIMBERRY = 'persimberry',
  PETAYABERRY = 'petayaberry',
  PHOTOALBUM = 'photoalbum',
  PIDGEOTITE = 'pidgeotite',
  PIKANIUMZ = 'pikaniumz',
  PIKASHUNIUMZ = 'pikashuniumz',
  PINAPBERRY = 'pinapberry',
  PINKBOW = 'pinkbow',
  PINKPETAL = 'pinkpetal',
  PINSIRITE = 'pinsirite',
  PIXIEPLATE = 'pixieplate',
  PLASMACARD = 'plasmacard',
  PLUMEFOSSIL = 'plumefossil',
  POFFINCASE = 'poffincase',
  POINTCARD = 'pointcard',
  POISONBARB = 'poisonbarb',
  POISONGEM = 'poisongem',
  POISONIUMZ = 'poisoniumz',
  POISONMEMORY = 'poisonmemory',
  POKEBALL = 'pokeball',
  POKEBLOCKCASE = 'pokeblockcase',
  POKEBLOCKKIT = 'pokeblockkit',
  POKEFLUTE = 'pokeflute',
  POKEMONBOXLINK = 'pokemonboxlink',
  POKERADAR = 'pokeradar',
  POLKADOTBOW = 'polkadotbow',
  POMEGBERRY = 'pomegberry',
  POTION = 'potion',
  POWDERJAR = 'powderjar',
  POWERANKLET = 'poweranklet',
  POWERBAND = 'powerband',
  POWERBELT = 'powerbelt',
  POWERBRACER = 'powerbracer',
  POWERHERB = 'powerherb',
  POWERLENS = 'powerlens',
  POWERPLANTPASS = 'powerplantpass',
  POWERWEIGHT = 'powerweight',
  PREMIERBALL = 'premierball',
  PRIMARIUMZ = 'primariumz',
  PRISMSCALE = 'prismscale',
  PRISONBOTTLE = 'prisonbottle',
  PROFESSORSMASK = 'professorsmask',
  PROFSLETTER = 'profsletter',
  PROPCASE = 'propcase',
  PROTECTIVEPADS = 'protectivepads',
  PROTECTOR = 'protector',
  PRZCUREBERRY = 'przcureberry',
  PSNCUREBERRY = 'psncureberry',
  PSYCHICGEM = 'psychicgem',
  PSYCHICMEMORY = 'psychicmemory',
  PSYCHICSEED = 'psychicseed',
  PSYCHIUMZ = 'psychiumz',
  PURPLEPETAL = 'purplepetal',
  QUALOTBERRY = 'qualotberry',
  QUICKBALL = 'quickball',
  QUICKCLAW = 'quickclaw',
  QUICKPOWDER = 'quickpowder',
  RABUTABERRY = 'rabutaberry',
  RAGECANDYBAR = 'ragecandybar',
  RAINBOWFLOWER = 'rainbowflower',
  RAINBOWPASS = 'rainbowpass',
  RAINBOWWING = 'rainbowwing',
  RAREBONE = 'rarebone',
  RAWSTBERRY = 'rawstberry',
  RAZORCLAW = 'razorclaw',
  RAZORFANG = 'razorfang',
  RAZZBERRY = 'razzberry',
  REAPERCLOTH = 'reapercloth',
  REDCARD = 'redcard',
  REDCHAIN = 'redchain',
  REDORB = 'redorb',
  REDPETAL = 'redpetal',
  REDSCALE = 'redscale',
  REPEATBALL = 'repeatball',
  REVEALGLASS = 'revealglass',
  RIBBONSWEET = 'ribbonsweet',
  RIDEPAGER = 'ridepager',
  RINDOBERRY = 'rindoberry',
  RINGTARGET = 'ringtarget',
  RM1KEY = 'rm1key',
  RM2KEY = 'rm2key',
  RM4KEY = 'rm4key',
  RM6KEY = 'rm6key',
  ROCKGEM = 'rockgem',
  ROCKINCENSE = 'rockincense',
  ROCKIUMZ = 'rockiumz',
  ROCKMEMORY = 'rockmemory',
  ROCKYHELMET = 'rockyhelmet',
  ROLLERSKATES = 'rollerskates',
  ROOMSERVICE = 'roomservice',
  ROOTFOSSIL = 'rootfossil',
  ROSEINCENSE = 'roseincense',
  ROSELIBERRY = 'roseliberry',
  ROTOMBIKE = 'rotombike',
  ROTOMCATALOG = 'rotomcatalog',
  ROWAPBERRY = 'rowapberry',
  RUBY = 'ruby',
  RULEBOOK = 'rulebook',
  RUSTEDSHIELD = 'rustedshield',
  RUSTEDSWORD = 'rustedsword',
  SABLENITE = 'sablenite',
  SACHET = 'sachet',
  SAFARIBALL = 'safariball',
  SAFETYGOGGLES = 'safetygoggles',
  SAILFOSSIL = 'sailfossil',
  SALACBERRY = 'salacberry',
  SALAMENCITE = 'salamencite',
  SAPPHIRE = 'sapphire',
  SCANNER = 'scanner',
  SCEPTILITE = 'sceptilite',
  SCIZORITE = 'scizorite',
  SCOPELENS = 'scopelens',
  SEAINCENSE = 'seaincense',
  SEALBAG = 'sealbag',
  SEALCASE = 'sealcase',
  SECRETKEY = 'secretkey',
  SECRETPOTION = 'secretpotion',
  SHARPBEAK = 'sharpbeak',
  SHARPEDONITE = 'sharpedonite',
  SHEDSHELL = 'shedshell',
  SHELLBELL = 'shellbell',
  SHINYCHARM = 'shinycharm',
  SHINYSTONE = 'shinystone',
  SHOCKDRIVE = 'shockdrive',
  SHUCABERRY = 'shucaberry',
  SILKSCARF = 'silkscarf',
  SILPHSCOPE = 'silphscope',
  SILVERPOWDER = 'silverpowder',
  SILVERWING = 'silverwing',
  SITRUSBERRY = 'sitrusberry',
  SKULLFOSSIL = 'skullfossil',
  SKYPLATE = 'skyplate',
  SLOWBRONITE = 'slowbronite',
  SLOWPOKETAIL = 'slowpoketail',
  SMOOTHROCK = 'smoothrock',
  SNORLIUMZ = 'snorliumz',
  SNOWBALL = 'snowball',
  SOFTSAND = 'softsand',
  SOLGANIUMZ = 'solganiumz',
  SONIASBOOK = 'soniasbook',
  SOOTSACK = 'sootsack',
  SOULDEW = 'souldew',
  SPARKLINGSTONE = 'sparklingstone',
  SPELLTAG = 'spelltag',
  SPELONBERRY = 'spelonberry',
  SPLASHPLATE = 'splashplate',
  SPOOKYPLATE = 'spookyplate',
  SPORTBALL = 'sportball',
  SPRAYDUCK = 'sprayduck',
  SPRINKLOTAD = 'sprinklotad',
  SQUIRTBOTTLE = 'squirtbottle',
  SSTICKET = 'ssticket',
  STARFBERRY = 'starfberry',
  STARSWEET = 'starsweet',
  STEELGEM = 'steelgem',
  STEELIUMZ = 'steeliumz',
  STEELIXITE = 'steelixite',
  STEELMEMORY = 'steelmemory',
  STICK = 'stick',
  STICKYBARB = 'stickybarb',
  STONEPLATE = 'stoneplate',
  STORAGEKEY = 'storagekey',
  STRAWBERRYSWEET = 'strawberrysweet',
  SUITEKEY = 'suitekey',
  SUNFLUTE = 'sunflute',
  SUNSTONE = 'sunstone',
  SUPERPOTION = 'superpotion',
  SUPERROD = 'superrod',
  SURGEBADGE = 'surgebadge',
  SWAMPERTITE = 'swampertite',
  SWEETAPPLE = 'sweetapple',
  TAMATOBERRY = 'tamatoberry',
  TANGABERRY = 'tangaberry',
  TAPUNIUMZ = 'tapuniumz',
  TARTAPPLE = 'tartapple',
  TEA = 'tea',
  TEACHYTV = 'teachytv',
  TERRAINEXTENDER = 'terrainextender',
  THICKCLUB = 'thickclub',
  THROATSPRAY = 'throatspray',
  THUNDERSTONE = 'thunderstone',
  TIDALBELL = 'tidalbell',
  TIMERBALL = 'timerball',
  TMCASE = 'tmcase',
  TMVPASS = 'tmvpass',
  TOWNMAP = 'townmap',
  TOXICORB = 'toxicorb',
  TOXICPLATE = 'toxicplate',
  TRAVELTRUNK = 'traveltrunk',
  TRIPASS = 'tripass',
  TWISTEDSPOON = 'twistedspoon',
  TYRANITARITE = 'tyranitarite',
  ULTRABALL = 'ultraball',
  ULTRANECROZIUMZ = 'ultranecroziumz',
  UNOWNREPORT = 'unownreport',
  UPGRADE = 'upgrade',
  UTILITYUMBRELLA = 'utilityumbrella',
  VENUSAURITE = 'venusaurite',
  VILEVIAL = 'vilevial',
  VSRECORDER = 'vsrecorder',
  VSSEEKER = 'vsseeker',
  WACANBERRY = 'wacanberry',
  WAILMERPAIL = 'wailmerpail',
  WATERGEM = 'watergem',
  WATERIUMZ = 'wateriumz',
  WATERMEMORY = 'watermemory',
  WATERSTONE = 'waterstone',
  WATMELBERRY = 'watmelberry',
  WAVEINCENSE = 'waveincense',
  WEAKNESSPOLICY = 'weaknesspolicy',
  WEPEARBERRY = 'wepearberry',
  WHIPPEDDREAM = 'whippeddream',
  WHITEHERB = 'whiteherb',
  WIDELENS = 'widelens',
  WIKIBERRY = 'wikiberry',
  WISEGLASSES = 'wiseglasses',
  WISHINGSTAR = 'wishingstar',
  WORKSKEY = 'workskey',
  XTRANSCEIVER = 'xtransceiver',
  YACHEBERRY = 'yacheberry',
  YELLOWPETAL = 'yellowpetal',
  ZAPPLATE = 'zapplate',
  ZOOMLENS = 'zoomlens',
  ZPOWERING = 'zpowering',
  ZRING = 'zring',
  ZYGARDECUBE = 'zygardecube'
}

/** A learnset entry */
export type Learnset = {
  __typename: 'Learnset';
  /** The back sprite for a Pokémon. For most Pokémon this will be the animated gif, with some exceptions that were older-gen exclusive */
  backSprite: Scalars['String'];
  /** The PokéDex colour for the Pokémon */
  color: Scalars['String'];
  /** The moves that are exclusively learned in the Unova Dream World */
  dreamworldMoves?: Maybe<Array<LearnsetMove>>;
  /** The moves that can be passed as egg moves */
  eggMoves?: Maybe<Array<LearnsetMove>>;
  /** The moves that are exclusive to event variants of the Pokémon */
  eventMoves?: Maybe<Array<LearnsetMove>>;
  /** The moves that can be learned through levelling up */
  levelUpMoves?: Maybe<Array<LearnsetLevelUpMove>>;
  /** The dex number for a Pokémon */
  num: Scalars['Int'];
  /** The key of the Pokémon as stored in the API */
  pokemonKey: PokemonEnum;
  /** The shiny back sprite for a Pokémon. For most Pokémon this will be the animated gif, with some exceptions that were older-gen exclusive */
  shinyBackSprite: Scalars['String'];
  /** The shiny sprite for a Pokémon. For most Pokémon this will be the animated gif, with some exceptions that were older-gen exclusive */
  shinySprite: Scalars['String'];
  /** The species name for a Pokémon */
  species: Scalars['String'];
  /** The sprite for a Pokémon. For most Pokémon this will be the animated gif, with some exceptions that were older-gen exclusive */
  sprite: Scalars['String'];
  /** The moves that can be learned from a Technical Machine or Technical Record */
  tmMoves?: Maybe<Array<LearnsetMove>>;
  /** The moves that can be learned from a move tutor */
  tutorMoves?: Maybe<Array<LearnsetMove>>;
  /** The moves that can be learned through virtual console transfer */
  virtualTransferMoves?: Maybe<Array<LearnsetMove>>;
};

/** A learnset level up move entry */
export type LearnsetLevelUpMove = {
  __typename: 'LearnsetLevelUpMove';
  /** The generation in which this pokémon learned the move this way */
  generation?: Maybe<Scalars['Int']>;
  /** The level at which the move is learned */
  level?: Maybe<Scalars['Int']>;
  /** The name of the move */
  name?: Maybe<Scalars['String']>;
};

/** A learnset move entry */
export type LearnsetMove = {
  __typename: 'LearnsetMove';
  /** The generation in which this pokémon learned the move this way */
  generation?: Maybe<Scalars['Int']>;
  /** The name of the move */
  name?: Maybe<Scalars['String']>;
};

/** A single Pokémon move entry */
export type Move = {
  __typename: 'Move';
  /** The accuracy for a move */
  accuracy: Scalars['Int'];
  /** The base power for a move */
  basePower: Scalars['String'];
  /** Bulbapedia page for a move */
  bulbapediaPage: Scalars['String'];
  /** The category for a move */
  category: Scalars['String'];
  /** The contest type for a move */
  contestType?: Maybe<Scalars['String']>;
  /** The long description for a move */
  desc?: Maybe<Scalars['String']>;
  /** Whether this move can be used outside of battle, and if it can what the effect of the field move is */
  isFieldMove?: Maybe<Scalars['String']>;
  /** Whether this move is a G-MAX move, and if it is which Gigantamaxed Pokémon can use it */
  isGMax?: Maybe<Scalars['String']>;
  /** Whether a move is non-standard, and if it is why */
  isNonstandard?: Maybe<Scalars['String']>;
  /** Whether this move is a Z-Move, and if it is the Z-Crystal required to trigger it */
  isZ?: Maybe<Scalars['String']>;
  /** The key of the move as stored in the API */
  key: MovesEnum;
  /** The power this move will have when used with its Max Move equivalent */
  maxMovePower?: Maybe<Scalars['Int']>;
  /** The name for a move */
  name: Scalars['String'];
  /** The power points for a move */
  pp: Scalars['Int'];
  /** The priority for a move */
  priority: Scalars['Int'];
  /** Serebii page for a move */
  serebiiPage: Scalars['String'];
  /** The short description for a move */
  shortDesc: Scalars['String'];
  /** Smogon page for a move */
  smogonPage: Scalars['String'];
  /** The target for a move */
  target: Scalars['String'];
  /** The type for a move */
  type: Scalars['String'];
  /** The power this move will have when used with its Z-move equivalent */
  zMovePower: Scalars['Int'];
};

/** The supported moves */
export enum MovesEnum {
  ABSORB = 'absorb',
  ACCELEROCK = 'accelerock',
  ACID = 'acid',
  ACIDARMOR = 'acidarmor',
  ACIDDOWNPOUR = 'aciddownpour',
  ACIDSPRAY = 'acidspray',
  ACROBATICS = 'acrobatics',
  ACUPRESSURE = 'acupressure',
  AERIALACE = 'aerialace',
  AEROBLAST = 'aeroblast',
  AFTERYOU = 'afteryou',
  AGILITY = 'agility',
  AIRCUTTER = 'aircutter',
  AIRSLASH = 'airslash',
  ALLOUTPUMMELING = 'alloutpummeling',
  ALLYSWITCH = 'allyswitch',
  AMNESIA = 'amnesia',
  ANCHORSHOT = 'anchorshot',
  ANCIENTPOWER = 'ancientpower',
  APPLEACID = 'appleacid',
  AQUAJET = 'aquajet',
  AQUARING = 'aquaring',
  AQUATAIL = 'aquatail',
  ARMTHRUST = 'armthrust',
  AROMATHERAPY = 'aromatherapy',
  AROMATICMIST = 'aromaticmist',
  ASSIST = 'assist',
  ASSURANCE = 'assurance',
  ASTONISH = 'astonish',
  ASTRALBARRAGE = 'astralbarrage',
  ATTACKORDER = 'attackorder',
  ATTRACT = 'attract',
  AURASPHERE = 'aurasphere',
  AURAWHEEL = 'aurawheel',
  AURORABEAM = 'aurorabeam',
  AURORAVEIL = 'auroraveil',
  AUTOTOMIZE = 'autotomize',
  AVALANCHE = 'avalanche',
  BABYDOLLEYES = 'babydolleyes',
  BADDYBAD = 'baddybad',
  BANEFULBUNKER = 'banefulbunker',
  BARBBARRAGE = 'barbbarrage',
  BARRAGE = 'barrage',
  BARRIER = 'barrier',
  BATONPASS = 'batonpass',
  BEAKBLAST = 'beakblast',
  BEATUP = 'beatup',
  BEHEMOTHBASH = 'behemothbash',
  BEHEMOTHBLADE = 'behemothblade',
  BELCH = 'belch',
  BELLYDRUM = 'bellydrum',
  BESTOW = 'bestow',
  BIDE = 'bide',
  BIND = 'bind',
  BITE = 'bite',
  BITTERMALICE = 'bittermalice',
  BLACKHOLEECLIPSE = 'blackholeeclipse',
  BLASTBURN = 'blastburn',
  BLAZEKICK = 'blazekick',
  BLEAKWINDSTORM = 'bleakwindstorm',
  BLIZZARD = 'blizzard',
  BLOCK = 'block',
  BLOOMDOOM = 'bloomdoom',
  BLUEFLARE = 'blueflare',
  BODYPRESS = 'bodypress',
  BODYSLAM = 'bodyslam',
  BOLTBEAK = 'boltbeak',
  BOLTSTRIKE = 'boltstrike',
  BONECLUB = 'boneclub',
  BONEMERANG = 'bonemerang',
  BONERUSH = 'bonerush',
  BOOMBURST = 'boomburst',
  BOUNCE = 'bounce',
  BOUNCYBUBBLE = 'bouncybubble',
  BRANCHPOKE = 'branchpoke',
  BRAVEBIRD = 'bravebird',
  BREAKINGSWIPE = 'breakingswipe',
  BREAKNECKBLITZ = 'breakneckblitz',
  BRICKBREAK = 'brickbreak',
  BRINE = 'brine',
  BRUTALSWING = 'brutalswing',
  BUBBLE = 'bubble',
  BUBBLEBEAM = 'bubblebeam',
  BUGBITE = 'bugbite',
  BUGBUZZ = 'bugbuzz',
  BULKUP = 'bulkup',
  BULLDOZE = 'bulldoze',
  BULLETPUNCH = 'bulletpunch',
  BULLETSEED = 'bulletseed',
  BURNINGJEALOUSY = 'burningjealousy',
  BURNUP = 'burnup',
  BUZZYBUZZ = 'buzzybuzz',
  CALMMIND = 'calmmind',
  CAMOUFLAGE = 'camouflage',
  CAPTIVATE = 'captivate',
  CATASTROPIKA = 'catastropika',
  CEASELESSEDGE = 'ceaselessedge',
  CELEBRATE = 'celebrate',
  CHARGE = 'charge',
  CHARGEBEAM = 'chargebeam',
  CHARM = 'charm',
  CHATTER = 'chatter',
  CHIPAWAY = 'chipaway',
  CHLOROBLAST = 'chloroblast',
  CIRCLETHROW = 'circlethrow',
  CLAMP = 'clamp',
  CLANGINGSCALES = 'clangingscales',
  CLANGOROUSSOUL = 'clangoroussoul',
  CLANGOROUSSOULBLAZE = 'clangoroussoulblaze',
  CLEARSMOG = 'clearsmog',
  CLOSECOMBAT = 'closecombat',
  COACHING = 'coaching',
  COIL = 'coil',
  COMETPUNCH = 'cometpunch',
  CONFIDE = 'confide',
  CONFUSERAY = 'confuseray',
  CONFUSION = 'confusion',
  CONSTRICT = 'constrict',
  CONTINENTALCRUSH = 'continentalcrush',
  CONVERSION = 'conversion',
  CONVERSION2 = 'conversion2',
  COPYCAT = 'copycat',
  COREENFORCER = 'coreenforcer',
  CORKSCREWCRASH = 'corkscrewcrash',
  CORROSIVEGAS = 'corrosivegas',
  COSMICPOWER = 'cosmicpower',
  COTTONGUARD = 'cottonguard',
  COTTONSPORE = 'cottonspore',
  COUNTER = 'counter',
  COURTCHANGE = 'courtchange',
  COVET = 'covet',
  CRABHAMMER = 'crabhammer',
  CRAFTYSHIELD = 'craftyshield',
  CROSSCHOP = 'crosschop',
  CROSSPOISON = 'crosspoison',
  CRUNCH = 'crunch',
  CRUSHCLAW = 'crushclaw',
  CRUSHGRIP = 'crushgrip',
  CURSE = 'curse',
  CUT = 'cut',
  DARKESTLARIAT = 'darkestlariat',
  DARKPULSE = 'darkpulse',
  DARKVOID = 'darkvoid',
  DAZZLINGGLEAM = 'dazzlinggleam',
  DECORATE = 'decorate',
  DEFENDORDER = 'defendorder',
  DEFENSECURL = 'defensecurl',
  DEFOG = 'defog',
  DESTINYBOND = 'destinybond',
  DETECT = 'detect',
  DEVASTATINGDRAKE = 'devastatingdrake',
  DIAMONDSTORM = 'diamondstorm',
  DIG = 'dig',
  DIRECLAW = 'direclaw',
  DISABLE = 'disable',
  DISARMINGVOICE = 'disarmingvoice',
  DISCHARGE = 'discharge',
  DIVE = 'dive',
  DIZZYPUNCH = 'dizzypunch',
  DOOMDESIRE = 'doomdesire',
  DOUBLEEDGE = 'doubleedge',
  DOUBLEHIT = 'doublehit',
  DOUBLEIRONBASH = 'doubleironbash',
  DOUBLEKICK = 'doublekick',
  DOUBLESLAP = 'doubleslap',
  DOUBLETEAM = 'doubleteam',
  DRACOMETEOR = 'dracometeor',
  DRAGONASCENT = 'dragonascent',
  DRAGONBREATH = 'dragonbreath',
  DRAGONCLAW = 'dragonclaw',
  DRAGONDANCE = 'dragondance',
  DRAGONDARTS = 'dragondarts',
  DRAGONENERGY = 'dragonenergy',
  DRAGONHAMMER = 'dragonhammer',
  DRAGONPULSE = 'dragonpulse',
  DRAGONRAGE = 'dragonrage',
  DRAGONRUSH = 'dragonrush',
  DRAGONTAIL = 'dragontail',
  DRAININGKISS = 'drainingkiss',
  DRAINPUNCH = 'drainpunch',
  DREAMEATER = 'dreameater',
  DRILLPECK = 'drillpeck',
  DRILLRUN = 'drillrun',
  DRUMBEATING = 'drumbeating',
  DUALCHOP = 'dualchop',
  DUALWINGBEAT = 'dualwingbeat',
  DYNAMAXCANNON = 'dynamaxcannon',
  DYNAMICPUNCH = 'dynamicpunch',
  EARTHPOWER = 'earthpower',
  EARTHQUAKE = 'earthquake',
  ECHOEDVOICE = 'echoedvoice',
  EERIEIMPULSE = 'eerieimpulse',
  EERIESPELL = 'eeriespell',
  EGGBOMB = 'eggbomb',
  ELECTRICTERRAIN = 'electricterrain',
  ELECTRIFY = 'electrify',
  ELECTROBALL = 'electroball',
  ELECTROWEB = 'electroweb',
  EMBARGO = 'embargo',
  EMBER = 'ember',
  ENCORE = 'encore',
  ENDEAVOR = 'endeavor',
  ENDURE = 'endure',
  ENERGYBALL = 'energyball',
  ENTRAINMENT = 'entrainment',
  ERUPTION = 'eruption',
  ESPERWING = 'esperwing',
  ETERNABEAM = 'eternabeam',
  EXPANDINGFORCE = 'expandingforce',
  EXPLOSION = 'explosion',
  EXTRASENSORY = 'extrasensory',
  EXTREMEEVOBOOST = 'extremeevoboost',
  EXTREMESPEED = 'extremespeed',
  FACADE = 'facade',
  FAIRYLOCK = 'fairylock',
  FAIRYWIND = 'fairywind',
  FAKEOUT = 'fakeout',
  FAKETEARS = 'faketears',
  FALSESURRENDER = 'falsesurrender',
  FALSESWIPE = 'falseswipe',
  FEATHERDANCE = 'featherdance',
  FEINT = 'feint',
  FEINTATTACK = 'feintattack',
  FELLSTINGER = 'fellstinger',
  FIERYDANCE = 'fierydance',
  FIERYWRATH = 'fierywrath',
  FINALGAMBIT = 'finalgambit',
  FIREBLAST = 'fireblast',
  FIREFANG = 'firefang',
  FIRELASH = 'firelash',
  FIREPLEDGE = 'firepledge',
  FIREPUNCH = 'firepunch',
  FIRESPIN = 'firespin',
  FIRSTIMPRESSION = 'firstimpression',
  FISHIOUSREND = 'fishiousrend',
  FISSURE = 'fissure',
  FLAIL = 'flail',
  FLAMEBURST = 'flameburst',
  FLAMECHARGE = 'flamecharge',
  FLAMETHROWER = 'flamethrower',
  FLAMEWHEEL = 'flamewheel',
  FLAREBLITZ = 'flareblitz',
  FLASH = 'flash',
  FLASHCANNON = 'flashcannon',
  FLATTER = 'flatter',
  FLEURCANNON = 'fleurcannon',
  FLING = 'fling',
  FLIPTURN = 'flipturn',
  FLOATYFALL = 'floatyfall',
  FLORALHEALING = 'floralhealing',
  FLOWERSHIELD = 'flowershield',
  FLY = 'fly',
  FLYINGPRESS = 'flyingpress',
  FOCUSBLAST = 'focusblast',
  FOCUSENERGY = 'focusenergy',
  FOCUSPUNCH = 'focuspunch',
  FOLLOWME = 'followme',
  FORCEPALM = 'forcepalm',
  FORESIGHT = 'foresight',
  FORESTSCURSE = 'forestscurse',
  FOULPLAY = 'foulplay',
  FREEZEDRY = 'freezedry',
  FREEZESHOCK = 'freezeshock',
  FREEZINGGLARE = 'freezingglare',
  FREEZYFROST = 'freezyfrost',
  FRENZYPLANT = 'frenzyplant',
  FROSTBREATH = 'frostbreath',
  FRUSTRATION = 'frustration',
  FURYATTACK = 'furyattack',
  FURYCUTTER = 'furycutter',
  FURYSWIPES = 'furyswipes',
  FUSIONBOLT = 'fusionbolt',
  FUSIONFLARE = 'fusionflare',
  FUTURESIGHT = 'futuresight',
  GASTROACID = 'gastroacid',
  GEARGRIND = 'geargrind',
  GEARUP = 'gearup',
  GENESISSUPERNOVA = 'genesissupernova',
  GEOMANCY = 'geomancy',
  GIGADRAIN = 'gigadrain',
  GIGAIMPACT = 'gigaimpact',
  GIGAVOLTHAVOC = 'gigavolthavoc',
  GLACIALLANCE = 'glaciallance',
  GLACIATE = 'glaciate',
  GLARE = 'glare',
  GLITZYGLOW = 'glitzyglow',
  GMAXBEFUDDLE = 'gmaxbefuddle',
  GMAXCANNONADE = 'gmaxcannonade',
  GMAXCENTIFERNO = 'gmaxcentiferno',
  GMAXCHISTRIKE = 'gmaxchistrike',
  GMAXCUDDLE = 'gmaxcuddle',
  GMAXDEPLETION = 'gmaxdepletion',
  GMAXDRUMSOLO = 'gmaxdrumsolo',
  GMAXFINALE = 'gmaxfinale',
  GMAXFIREBALL = 'gmaxfireball',
  GMAXFOAMBURST = 'gmaxfoamburst',
  GMAXGOLDRUSH = 'gmaxgoldrush',
  GMAXGRAVITAS = 'gmaxgravitas',
  GMAXHYDROSNIPE = 'gmaxhydrosnipe',
  GMAXMALODOR = 'gmaxmalodor',
  GMAXMELTDOWN = 'gmaxmeltdown',
  GMAXONEBLOW = 'gmaxoneblow',
  GMAXRAPIDFLOW = 'gmaxrapidflow',
  GMAXREPLENISH = 'gmaxreplenish',
  GMAXRESONANCE = 'gmaxresonance',
  GMAXSANDBLAST = 'gmaxsandblast',
  GMAXSMITE = 'gmaxsmite',
  GMAXSNOOZE = 'gmaxsnooze',
  GMAXSTEELSURGE = 'gmaxsteelsurge',
  GMAXSTONESURGE = 'gmaxstonesurge',
  GMAXSTUNSHOCK = 'gmaxstunshock',
  GMAXSWEETNESS = 'gmaxsweetness',
  GMAXTARTNESS = 'gmaxtartness',
  GMAXTERROR = 'gmaxterror',
  GMAXVINELASH = 'gmaxvinelash',
  GMAXVOLCALITH = 'gmaxvolcalith',
  GMAXVOLTCRASH = 'gmaxvoltcrash',
  GMAXWILDFIRE = 'gmaxwildfire',
  GMAXWINDRAGE = 'gmaxwindrage',
  GRASSKNOT = 'grassknot',
  GRASSPLEDGE = 'grasspledge',
  GRASSWHISTLE = 'grasswhistle',
  GRASSYGLIDE = 'grassyglide',
  GRASSYTERRAIN = 'grassyterrain',
  GRAVAPPLE = 'gravapple',
  GRAVITY = 'gravity',
  GROWL = 'growl',
  GROWTH = 'growth',
  GRUDGE = 'grudge',
  GUARDIANOFALOLA = 'guardianofalola',
  GUARDSPLIT = 'guardsplit',
  GUARDSWAP = 'guardswap',
  GUILLOTINE = 'guillotine',
  GUNKSHOT = 'gunkshot',
  GUST = 'gust',
  GYROBALL = 'gyroball',
  HAIL = 'hail',
  HAMMERARM = 'hammerarm',
  HAPPYHOUR = 'happyhour',
  HARDEN = 'harden',
  HAZE = 'haze',
  HEADBUTT = 'headbutt',
  HEADCHARGE = 'headcharge',
  HEADLONGRUSH = 'headlongrush',
  HEADSMASH = 'headsmash',
  HEALBELL = 'healbell',
  HEALBLOCK = 'healblock',
  HEALINGWISH = 'healingwish',
  HEALORDER = 'healorder',
  HEALPULSE = 'healpulse',
  HEARTSTAMP = 'heartstamp',
  HEARTSWAP = 'heartswap',
  HEATCRASH = 'heatcrash',
  HEATWAVE = 'heatwave',
  HEAVYSLAM = 'heavyslam',
  HELPINGHAND = 'helpinghand',
  HEX = 'hex',
  HIDDENPOWER = 'hiddenpower',
  HIDDENPOWERBUG = 'hiddenpowerbug',
  HIDDENPOWERDARK = 'hiddenpowerdark',
  HIDDENPOWERDRAGON = 'hiddenpowerdragon',
  HIDDENPOWERELECTRIC = 'hiddenpowerelectric',
  HIDDENPOWERFIGHTING = 'hiddenpowerfighting',
  HIDDENPOWERFIRE = 'hiddenpowerfire',
  HIDDENPOWERFLYING = 'hiddenpowerflying',
  HIDDENPOWERGHOST = 'hiddenpowerghost',
  HIDDENPOWERGRASS = 'hiddenpowergrass',
  HIDDENPOWERGROUND = 'hiddenpowerground',
  HIDDENPOWERICE = 'hiddenpowerice',
  HIDDENPOWERPOISON = 'hiddenpowerpoison',
  HIDDENPOWERPSYCHIC = 'hiddenpowerpsychic',
  HIDDENPOWERROCK = 'hiddenpowerrock',
  HIDDENPOWERSTEEL = 'hiddenpowersteel',
  HIDDENPOWERWATER = 'hiddenpowerwater',
  HIGHHORSEPOWER = 'highhorsepower',
  HIGHJUMPKICK = 'highjumpkick',
  HOLDBACK = 'holdback',
  HOLDHANDS = 'holdhands',
  HONECLAWS = 'honeclaws',
  HORNATTACK = 'hornattack',
  HORNDRILL = 'horndrill',
  HORNLEECH = 'hornleech',
  HOWL = 'howl',
  HURRICANE = 'hurricane',
  HYDROCANNON = 'hydrocannon',
  HYDROPUMP = 'hydropump',
  HYDROVORTEX = 'hydrovortex',
  HYPERBEAM = 'hyperbeam',
  HYPERFANG = 'hyperfang',
  HYPERSPACEFURY = 'hyperspacefury',
  HYPERSPACEHOLE = 'hyperspacehole',
  HYPERVOICE = 'hypervoice',
  HYPNOSIS = 'hypnosis',
  ICEBALL = 'iceball',
  ICEBEAM = 'icebeam',
  ICEBURN = 'iceburn',
  ICEFANG = 'icefang',
  ICEHAMMER = 'icehammer',
  ICEPUNCH = 'icepunch',
  ICESHARD = 'iceshard',
  ICICLECRASH = 'iciclecrash',
  ICICLESPEAR = 'iciclespear',
  ICYWIND = 'icywind',
  IMPRISON = 'imprison',
  INCINERATE = 'incinerate',
  INFERNALPARADE = 'infernalparade',
  INFERNO = 'inferno',
  INFERNOOVERDRIVE = 'infernooverdrive',
  INFESTATION = 'infestation',
  INGRAIN = 'ingrain',
  INSTRUCT = 'instruct',
  IONDELUGE = 'iondeluge',
  IRONDEFENSE = 'irondefense',
  IRONHEAD = 'ironhead',
  IRONTAIL = 'irontail',
  JAWLOCK = 'jawlock',
  JUDGMENT = 'judgment',
  JUMPKICK = 'jumpkick',
  JUNGLEHEALING = 'junglehealing',
  KARATECHOP = 'karatechop',
  KINESIS = 'kinesis',
  KINGSSHIELD = 'kingsshield',
  KNOCKOFF = 'knockoff',
  LANDSWRATH = 'landswrath',
  LASERFOCUS = 'laserfocus',
  LASHOUT = 'lashout',
  LASTRESORT = 'lastresort',
  LAVAPLUME = 'lavaplume',
  LEAFAGE = 'leafage',
  LEAFBLADE = 'leafblade',
  LEAFSTORM = 'leafstorm',
  LEAFTORNADO = 'leaftornado',
  LEECHLIFE = 'leechlife',
  LEECHSEED = 'leechseed',
  LEER = 'leer',
  LETSSNUGGLEFOREVER = 'letssnuggleforever',
  LICK = 'lick',
  LIFEDEW = 'lifedew',
  LIGHTOFRUIN = 'lightofruin',
  LIGHTSCREEN = 'lightscreen',
  LIGHTTHATBURNSTHESKY = 'lightthatburnsthesky',
  LIQUIDATION = 'liquidation',
  LOCKON = 'lockon',
  LOVELYKISS = 'lovelykiss',
  LOWKICK = 'lowkick',
  LOWSWEEP = 'lowsweep',
  LUCKYCHANT = 'luckychant',
  LUNARBLESSING = 'lunarblessing',
  LUNARDANCE = 'lunardance',
  LUNGE = 'lunge',
  LUSTERPURGE = 'lusterpurge',
  MACHPUNCH = 'machpunch',
  MAGICALLEAF = 'magicalleaf',
  MAGICCOAT = 'magiccoat',
  MAGICPOWDER = 'magicpowder',
  MAGICROOM = 'magicroom',
  MAGIKARPSREVENGE = 'magikarpsrevenge',
  MAGMASTORM = 'magmastorm',
  MAGNETBOMB = 'magnetbomb',
  MAGNETICFLUX = 'magneticflux',
  MAGNETRISE = 'magnetrise',
  MAGNITUDE = 'magnitude',
  MALICIOUSMOONSAULT = 'maliciousmoonsault',
  MATBLOCK = 'matblock',
  MAXAIRSTREAM = 'maxairstream',
  MAXDARKNESS = 'maxdarkness',
  MAXFLARE = 'maxflare',
  MAXFLUTTERBY = 'maxflutterby',
  MAXGEYSER = 'maxgeyser',
  MAXGUARD = 'maxguard',
  MAXHAILSTORM = 'maxhailstorm',
  MAXKNUCKLE = 'maxknuckle',
  MAXLIGHTNING = 'maxlightning',
  MAXMINDSTORM = 'maxmindstorm',
  MAXOOZE = 'maxooze',
  MAXOVERGROWTH = 'maxovergrowth',
  MAXPHANTASM = 'maxphantasm',
  MAXQUAKE = 'maxquake',
  MAXROCKFALL = 'maxrockfall',
  MAXSTARFALL = 'maxstarfall',
  MAXSTEELSPIKE = 'maxsteelspike',
  MAXSTRIKE = 'maxstrike',
  MAXWYRMWIND = 'maxwyrmwind',
  MEANLOOK = 'meanlook',
  MEDITATE = 'meditate',
  MEFIRST = 'mefirst',
  MEGADRAIN = 'megadrain',
  MEGAHORN = 'megahorn',
  MEGAKICK = 'megakick',
  MEGAPUNCH = 'megapunch',
  MEMENTO = 'memento',
  MENACINGMOONRAZEMAELSTROM = 'menacingmoonrazemaelstrom',
  METALBURST = 'metalburst',
  METALCLAW = 'metalclaw',
  METALSOUND = 'metalsound',
  METEORASSAULT = 'meteorassault',
  METEORBEAM = 'meteorbeam',
  METEORMASH = 'meteormash',
  METRONOME = 'metronome',
  MILKDRINK = 'milkdrink',
  MIMIC = 'mimic',
  MINDBLOWN = 'mindblown',
  MINDREADER = 'mindreader',
  MINIMIZE = 'minimize',
  MIRACLEEYE = 'miracleeye',
  MIRRORCOAT = 'mirrorcoat',
  MIRRORMOVE = 'mirrormove',
  MIRRORSHOT = 'mirrorshot',
  MIST = 'mist',
  MISTBALL = 'mistball',
  MISTYEXPLOSION = 'mistyexplosion',
  MISTYTERRAIN = 'mistyterrain',
  MOONBLAST = 'moonblast',
  MOONGEISTBEAM = 'moongeistbeam',
  MOONLIGHT = 'moonlight',
  MORNINGSUN = 'morningsun',
  MOUNTAINGALE = 'mountaingale',
  MUDBOMB = 'mudbomb',
  MUDDYWATER = 'muddywater',
  MUDSHOT = 'mudshot',
  MUDSLAP = 'mudslap',
  MUDSPORT = 'mudsport',
  MULTIATTACK = 'multiattack',
  MYSTICALFIRE = 'mysticalfire',
  MYSTICALPOWER = 'mysticalpower',
  NASTYPLOT = 'nastyplot',
  NATURALGIFT = 'naturalgift',
  NATUREPOWER = 'naturepower',
  NATURESMADNESS = 'naturesmadness',
  NEEDLEARM = 'needlearm',
  NEVERENDINGNIGHTMARE = 'neverendingnightmare',
  NIGHTDAZE = 'nightdaze',
  NIGHTMARE = 'nightmare',
  NIGHTSHADE = 'nightshade',
  NIGHTSLASH = 'nightslash',
  NOBLEROAR = 'nobleroar',
  NORETREAT = 'noretreat',
  NUZZLE = 'nuzzle',
  OBLIVIONWING = 'oblivionwing',
  OBSTRUCT = 'obstruct',
  OCEANICOPERETTA = 'oceanicoperetta',
  OCTAZOOKA = 'octazooka',
  OCTOLOCK = 'octolock',
  ODORSLEUTH = 'odorsleuth',
  OMINOUSWIND = 'ominouswind',
  ORIGINPULSE = 'originpulse',
  OUTRAGE = 'outrage',
  OVERDRIVE = 'overdrive',
  OVERHEAT = 'overheat',
  PAINSPLIT = 'painsplit',
  PALEOWAVE = 'paleowave',
  PARABOLICCHARGE = 'paraboliccharge',
  PARTINGSHOT = 'partingshot',
  PAYBACK = 'payback',
  PAYDAY = 'payday',
  PECK = 'peck',
  PERISHSONG = 'perishsong',
  PETALBLIZZARD = 'petalblizzard',
  PETALDANCE = 'petaldance',
  PHANTOMFORCE = 'phantomforce',
  PHOTONGEYSER = 'photongeyser',
  PIKAPAPOW = 'pikapapow',
  PINMISSILE = 'pinmissile',
  PLASMAFISTS = 'plasmafists',
  PLAYNICE = 'playnice',
  PLAYROUGH = 'playrough',
  PLUCK = 'pluck',
  POISONFANG = 'poisonfang',
  POISONGAS = 'poisongas',
  POISONJAB = 'poisonjab',
  POISONPOWDER = 'poisonpowder',
  POISONSTING = 'poisonsting',
  POISONTAIL = 'poisontail',
  POLLENPUFF = 'pollenpuff',
  POLTERGEIST = 'poltergeist',
  POUND = 'pound',
  POWDER = 'powder',
  POWDERSNOW = 'powdersnow',
  POWERGEM = 'powergem',
  POWERSHIFT = 'powershift',
  POWERSPLIT = 'powersplit',
  POWERSWAP = 'powerswap',
  POWERTRICK = 'powertrick',
  POWERTRIP = 'powertrip',
  POWERUPPUNCH = 'poweruppunch',
  POWERWHIP = 'powerwhip',
  PRECIPICEBLADES = 'precipiceblades',
  PRESENT = 'present',
  PRISMATICLASER = 'prismaticlaser',
  PROTECT = 'protect',
  PSYBEAM = 'psybeam',
  PSYCHIC = 'psychic',
  PSYCHICFANGS = 'psychicfangs',
  PSYCHICTERRAIN = 'psychicterrain',
  PSYCHOBOOST = 'psychoboost',
  PSYCHOCUT = 'psychocut',
  PSYCHOSHIFT = 'psychoshift',
  PSYCHUP = 'psychup',
  PSYSHIELDBASH = 'psyshieldbash',
  PSYSHOCK = 'psyshock',
  PSYSTRIKE = 'psystrike',
  PSYWAVE = 'psywave',
  PULVERIZINGPANCAKE = 'pulverizingpancake',
  PUNISHMENT = 'punishment',
  PURIFY = 'purify',
  PURSUIT = 'pursuit',
  PYROBALL = 'pyroball',
  QUASH = 'quash',
  QUICKATTACK = 'quickattack',
  QUICKGUARD = 'quickguard',
  QUIVERDANCE = 'quiverdance',
  RAGE = 'rage',
  RAGEPOWDER = 'ragepowder',
  RAGINGFURY = 'ragingfury',
  RAINDANCE = 'raindance',
  RAPIDSPIN = 'rapidspin',
  RAZORLEAF = 'razorleaf',
  RAZORSHELL = 'razorshell',
  RAZORWIND = 'razorwind',
  RECOVER = 'recover',
  RECYCLE = 'recycle',
  REFLECT = 'reflect',
  REFLECTTYPE = 'reflecttype',
  REFRESH = 'refresh',
  RELICSONG = 'relicsong',
  REST = 'rest',
  RETALIATE = 'retaliate',
  RETURN = 'return',
  REVELATIONDANCE = 'revelationdance',
  REVENGE = 'revenge',
  REVERSAL = 'reversal',
  RISINGVOLTAGE = 'risingvoltage',
  ROAR = 'roar',
  ROAROFTIME = 'roaroftime',
  ROCKBLAST = 'rockblast',
  ROCKCLIMB = 'rockclimb',
  ROCKPOLISH = 'rockpolish',
  ROCKSLIDE = 'rockslide',
  ROCKSMASH = 'rocksmash',
  ROCKTHROW = 'rockthrow',
  ROCKTOMB = 'rocktomb',
  ROCKWRECKER = 'rockwrecker',
  ROLEPLAY = 'roleplay',
  ROLLINGKICK = 'rollingkick',
  ROLLOUT = 'rollout',
  ROOST = 'roost',
  ROTOTILLER = 'rototiller',
  ROUND = 'round',
  SACREDFIRE = 'sacredfire',
  SACREDSWORD = 'sacredsword',
  SAFEGUARD = 'safeguard',
  SANDATTACK = 'sandattack',
  SANDSEARSTORM = 'sandsearstorm',
  SANDSTORM = 'sandstorm',
  SANDTOMB = 'sandtomb',
  SAPPYSEED = 'sappyseed',
  SAVAGESPINOUT = 'savagespinout',
  SCALD = 'scald',
  SCALESHOT = 'scaleshot',
  SCARYFACE = 'scaryface',
  SCORCHINGSANDS = 'scorchingsands',
  SCRATCH = 'scratch',
  SCREECH = 'screech',
  SEARINGSHOT = 'searingshot',
  SEARINGSUNRAZESMASH = 'searingsunrazesmash',
  SECRETPOWER = 'secretpower',
  SECRETSWORD = 'secretsword',
  SEEDBOMB = 'seedbomb',
  SEEDFLARE = 'seedflare',
  SEISMICTOSS = 'seismictoss',
  SELFDESTRUCT = 'selfdestruct',
  SHADOWBALL = 'shadowball',
  SHADOWBONE = 'shadowbone',
  SHADOWCLAW = 'shadowclaw',
  SHADOWFORCE = 'shadowforce',
  SHADOWPUNCH = 'shadowpunch',
  SHADOWSNEAK = 'shadowsneak',
  SHADOWSTRIKE = 'shadowstrike',
  SHARPEN = 'sharpen',
  SHATTEREDPSYCHE = 'shatteredpsyche',
  SHEERCOLD = 'sheercold',
  SHELLSIDEARM = 'shellsidearm',
  SHELLSMASH = 'shellsmash',
  SHELLTRAP = 'shelltrap',
  SHELTER = 'shelter',
  SHIFTGEAR = 'shiftgear',
  SHOCKWAVE = 'shockwave',
  SHOREUP = 'shoreup',
  SIGNALBEAM = 'signalbeam',
  SILVERWIND = 'silverwind',
  SIMPLEBEAM = 'simplebeam',
  SING = 'sing',
  SINISTERARROWRAID = 'sinisterarrowraid',
  SIZZLYSLIDE = 'sizzlyslide',
  SKETCH = 'sketch',
  SKILLSWAP = 'skillswap',
  SKITTERSMACK = 'skittersmack',
  SKULLBASH = 'skullbash',
  SKYATTACK = 'skyattack',
  SKYDROP = 'skydrop',
  SKYUPPERCUT = 'skyuppercut',
  SLACKOFF = 'slackoff',
  SLAM = 'slam',
  SLASH = 'slash',
  SLEEPPOWDER = 'sleeppowder',
  SLEEPTALK = 'sleeptalk',
  SLUDGE = 'sludge',
  SLUDGEBOMB = 'sludgebomb',
  SLUDGEWAVE = 'sludgewave',
  SMACKDOWN = 'smackdown',
  SMARTSTRIKE = 'smartstrike',
  SMELLINGSALTS = 'smellingsalts',
  SMOG = 'smog',
  SMOKESCREEN = 'smokescreen',
  SNAPTRAP = 'snaptrap',
  SNARL = 'snarl',
  SNATCH = 'snatch',
  SNIPESHOT = 'snipeshot',
  SNORE = 'snore',
  SOAK = 'soak',
  SOFTBOILED = 'softboiled',
  SOLARBEAM = 'solarbeam',
  SOLARBLADE = 'solarblade',
  SONICBOOM = 'sonicboom',
  SOULSTEALING7STARSTRIKE = 'soulstealing7starstrike',
  SPACIALREND = 'spacialrend',
  SPARK = 'spark',
  SPARKLINGARIA = 'sparklingaria',
  SPARKLYSWIRL = 'sparklyswirl',
  SPECTRALTHIEF = 'spectralthief',
  SPEEDSWAP = 'speedswap',
  SPIDERWEB = 'spiderweb',
  SPIKECANNON = 'spikecannon',
  SPIKES = 'spikes',
  SPIKYSHIELD = 'spikyshield',
  SPIRITBREAK = 'spiritbreak',
  SPIRITSHACKLE = 'spiritshackle',
  SPITE = 'spite',
  SPITUP = 'spitup',
  SPLASH = 'splash',
  SPLINTEREDSTORMSHARDS = 'splinteredstormshards',
  SPLISHYSPLASH = 'splishysplash',
  SPORE = 'spore',
  SPOTLIGHT = 'spotlight',
  SPRINGTIDESTORM = 'springtidestorm',
  STEALTHROCK = 'stealthrock',
  STEAMERUPTION = 'steameruption',
  STEAMROLLER = 'steamroller',
  STEELBEAM = 'steelbeam',
  STEELROLLER = 'steelroller',
  STEELWING = 'steelwing',
  STICKYWEB = 'stickyweb',
  STOCKPILE = 'stockpile',
  STOKEDSPARKSURFER = 'stokedsparksurfer',
  STOMP = 'stomp',
  STOMPINGTANTRUM = 'stompingtantrum',
  STONEAXE = 'stoneaxe',
  STONEEDGE = 'stoneedge',
  STOREDPOWER = 'storedpower',
  STORMTHROW = 'stormthrow',
  STRANGESTEAM = 'strangesteam',
  STRENGTH = 'strength',
  STRENGTHSAP = 'strengthsap',
  STRINGSHOT = 'stringshot',
  STRUGGLE = 'struggle',
  STRUGGLEBUG = 'strugglebug',
  STUFFCHEEKS = 'stuffcheeks',
  STUNSPORE = 'stunspore',
  SUBMISSION = 'submission',
  SUBSTITUTE = 'substitute',
  SUBZEROSLAMMER = 'subzeroslammer',
  SUCKERPUNCH = 'suckerpunch',
  SUNNYDAY = 'sunnyday',
  SUNSTEELSTRIKE = 'sunsteelstrike',
  SUPERFANG = 'superfang',
  SUPERPOWER = 'superpower',
  SUPERSONIC = 'supersonic',
  SUPERSONICSKYSTRIKE = 'supersonicskystrike',
  SURF = 'surf',
  SURGINGSTRIKES = 'surgingstrikes',
  SWAGGER = 'swagger',
  SWALLOW = 'swallow',
  SWEETKISS = 'sweetkiss',
  SWEETSCENT = 'sweetscent',
  SWIFT = 'swift',
  SWITCHEROO = 'switcheroo',
  SWORDSDANCE = 'swordsdance',
  SYNCHRONOISE = 'synchronoise',
  SYNTHESIS = 'synthesis',
  TACKLE = 'tackle',
  TAILGLOW = 'tailglow',
  TAILSLAP = 'tailslap',
  TAILWHIP = 'tailwhip',
  TAILWIND = 'tailwind',
  TAKEDOWN = 'takedown',
  TAKEHEART = 'takeheart',
  TARSHOT = 'tarshot',
  TAUNT = 'taunt',
  TEARFULLOOK = 'tearfullook',
  TEATIME = 'teatime',
  TECHNOBLAST = 'technoblast',
  TECTONICRAGE = 'tectonicrage',
  TEETERDANCE = 'teeterdance',
  TELEKINESIS = 'telekinesis',
  TELEPORT = 'teleport',
  TENMILLIONVOLTTHUNDERBOLT = 'tenmillionvoltthunderbolt',
  TERRAINPULSE = 'terrainpulse',
  THIEF = 'thief',
  THOUSANDARROWS = 'thousandarrows',
  THOUSANDWAVES = 'thousandwaves',
  THRASH = 'thrash',
  THROATCHOP = 'throatchop',
  THUNDER = 'thunder',
  THUNDERBOLT = 'thunderbolt',
  THUNDERCAGE = 'thundercage',
  THUNDERFANG = 'thunderfang',
  THUNDEROUSKICK = 'thunderouskick',
  THUNDERPUNCH = 'thunderpunch',
  THUNDERSHOCK = 'thundershock',
  THUNDERWAVE = 'thunderwave',
  TICKLE = 'tickle',
  TOPSYTURVY = 'topsyturvy',
  TORMENT = 'torment',
  TOXIC = 'toxic',
  TOXICSPIKES = 'toxicspikes',
  TOXICTHREAD = 'toxicthread',
  TRANSFORM = 'transform',
  TRIATTACK = 'triattack',
  TRICK = 'trick',
  TRICKORTREAT = 'trickortreat',
  TRICKROOM = 'trickroom',
  TRIPLEARROWS = 'triplearrows',
  TRIPLEAXEL = 'tripleaxel',
  TRIPLEKICK = 'triplekick',
  TROPKICK = 'tropkick',
  TRUMPCARD = 'trumpcard',
  TWINEEDLE = 'twineedle',
  TWINKLETACKLE = 'twinkletackle',
  TWISTER = 'twister',
  UPROAR = 'uproar',
  UTURN = 'uturn',
  VACUUMWAVE = 'vacuumwave',
  VCREATE = 'vcreate',
  VEEVEEVOLLEY = 'veeveevolley',
  VENOMDRENCH = 'venomdrench',
  VENOSHOCK = 'venoshock',
  VICTORYDANCE = 'victorydance',
  VINEWHIP = 'vinewhip',
  VISEGRIP = 'visegrip',
  VITALTHROW = 'vitalthrow',
  VOLTSWITCH = 'voltswitch',
  VOLTTACKLE = 'volttackle',
  WAKEUPSLAP = 'wakeupslap',
  WATERFALL = 'waterfall',
  WATERGUN = 'watergun',
  WATERPLEDGE = 'waterpledge',
  WATERPULSE = 'waterpulse',
  WATERSHURIKEN = 'watershuriken',
  WATERSPORT = 'watersport',
  WATERSPOUT = 'waterspout',
  WAVECRASH = 'wavecrash',
  WEATHERBALL = 'weatherball',
  WHIRLPOOL = 'whirlpool',
  WHIRLWIND = 'whirlwind',
  WICKEDBLOW = 'wickedblow',
  WIDEGUARD = 'wideguard',
  WILDBOLTSTORM = 'wildboltstorm',
  WILDCHARGE = 'wildcharge',
  WILLOWISP = 'willowisp',
  WINGATTACK = 'wingattack',
  WISH = 'wish',
  WITHDRAW = 'withdraw',
  WONDERROOM = 'wonderroom',
  WOODHAMMER = 'woodhammer',
  WORKUP = 'workup',
  WORRYSEED = 'worryseed',
  WRAP = 'wrap',
  WRINGOUT = 'wringout',
  XSCISSOR = 'xscissor',
  YAWN = 'yawn',
  ZAPCANNON = 'zapcannon',
  ZENHEADBUTT = 'zenheadbutt',
  ZINGZAP = 'zingzap',
  ZIPPYZAP = 'zippyzap'
}

/** A Pokémon's entry */
export type Pokemon = {
  __typename: 'Pokemon';
  /** The abilities for a Pokémon */
  abilities: Abilities;
  /** The back sprite for a Pokémon. For most Pokémon this will be the animated gif, with some exceptions that were older-gen exclusive */
  backSprite: Scalars['String'];
  /** Base form if this entry describes an alternate form */
  baseForme?: Maybe<Scalars['String']>;
  /** Base species if this entry describes a special form */
  baseSpecies?: Maybe<Scalars['String']>;
  /** Base stats for a Pokémon */
  baseStats: Stats;
  /** The total of all base stats for a Pokémon */
  baseStatsTotal: Scalars['Int'];
  /** Bulbapedia page for a Pokémon */
  bulbapediaPage: Scalars['String'];
  /** The catch rate data for a Pokémon */
  catchRate?: Maybe<CatchRate>;
  /** The colour of a Pokémon as listed in the Pokedex */
  color: Scalars['String'];
  /** Any other *cosmetic* forms for a Pokémon, distinguished from other formes as cosmetic formes only change the look of the Pokémon, while other formes might also change an ability, moveset or other data. */
  cosmeticFormes?: Maybe<Array<Scalars['String']>>;
  /** The egg groups a Pokémon is in */
  eggGroups?: Maybe<Array<Scalars['String']>>;
  /** EV yields for a Pokémon */
  evYields: EvYields;
  /** The evolution level, or special method, for a Pokémon */
  evolutionLevel?: Maybe<Scalars['String']>;
  /** The evolutions for a Pokémon, if any */
  evolutions?: Maybe<Array<Pokemon>>;
  /** The flavor texts for a Pokémon */
  flavorTexts: Array<Flavor>;
  /** The form identifier of a Pokémon */
  forme?: Maybe<Scalars['String']>;
  /** The single letter identifier of the form */
  formeLetter?: Maybe<Scalars['String']>;
  /** The gender data for a Pokémon */
  gender: Gender;
  /** The height of a Pokémon in meters */
  height: Scalars['Float'];
  /** Whether the egg of a Pokémon is obtainable */
  isEggObtainable: Scalars['Boolean'];
  /** The key of the Pokémon as stored in the API */
  key: PokemonEnum;
  /** The levelling rate of a Pokémon */
  levellingRate?: Maybe<Scalars['String']>;
  /** The maximum number of steps required for the egg of a Pokémon to hatch */
  maximumHatchTime?: Maybe<Scalars['Int']>;
  /** The minimum number of steps required for the egg of a Pokémon to hatch */
  minimumHatchTime?: Maybe<Scalars['Int']>;
  /** The dex number for a Pokémon */
  num: Scalars['Int'];
  /** Any other forms for a Pokémon */
  otherFormes?: Maybe<Array<Scalars['String']>>;
  /** The preevolutions for a Pokémon, if any */
  preevolutions?: Maybe<Array<Pokemon>>;
  /** Serebii page for a Pokémon */
  serebiiPage: Scalars['String'];
  /** The shiny back sprite for a Pokémon. For most Pokémon this will be the animated gif, with some exceptions that were older-gen exclusive */
  shinyBackSprite: Scalars['String'];
  /** The shiny sprite for a Pokémon. For most Pokémon this will be the animated gif, with some exceptions that were older-gen exclusive */
  shinySprite: Scalars['String'];
  /** Smogon page for a Pokémon */
  smogonPage: Scalars['String'];
  /** The smogon tier a Pokémon falls under */
  smogonTier: Scalars['String'];
  /** The species name for a Pokémon */
  species: Scalars['String'];
  /** The sprite for a Pokémon. For most Pokémon this will be the animated gif, with some exceptions that were older-gen exclusive */
  sprite: Scalars['String'];
  /** The types for a Pokémon */
  types: Array<Scalars['String']>;
  /** The weight of a Pokémon in kilograms */
  weight: Scalars['Float'];
};

/** The supported Pokémon */
export enum PokemonEnum {
  ABOMASNOW = 'abomasnow',
  ABOMASNOWMEGA = 'abomasnowmega',
  ABRA = 'abra',
  ABSOL = 'absol',
  ABSOLMEGA = 'absolmega',
  ACCELGOR = 'accelgor',
  AEGISLASH = 'aegislash',
  AEGISLASHBLADE = 'aegislashblade',
  AERODACTYL = 'aerodactyl',
  AERODACTYLMEGA = 'aerodactylmega',
  AGGRON = 'aggron',
  AGGRONMEGA = 'aggronmega',
  AIPOM = 'aipom',
  ALAKAZAM = 'alakazam',
  ALAKAZAMMEGA = 'alakazammega',
  ALCREMIE = 'alcremie',
  ALCREMIEGMAX = 'alcremiegmax',
  ALOMOMOLA = 'alomomola',
  ALTARIA = 'altaria',
  ALTARIAMEGA = 'altariamega',
  AMAURA = 'amaura',
  AMBIPOM = 'ambipom',
  AMOONGUSS = 'amoonguss',
  AMPHAROS = 'ampharos',
  AMPHAROSMEGA = 'ampharosmega',
  ANORITH = 'anorith',
  APPLETUN = 'appletun',
  APPLETUNGMAX = 'appletungmax',
  APPLIN = 'applin',
  ARAQUANID = 'araquanid',
  ARAQUANIDTOTEM = 'araquanidtotem',
  ARBOK = 'arbok',
  ARCANINE = 'arcanine',
  ARCANINEHISUI = 'arcaninehisui',
  ARCEUS = 'arceus',
  ARCEUSBUG = 'arceusbug',
  ARCEUSDARK = 'arceusdark',
  ARCEUSDRAGON = 'arceusdragon',
  ARCEUSELECTRIC = 'arceuselectric',
  ARCEUSFAIRY = 'arceusfairy',
  ARCEUSFIGHTING = 'arceusfighting',
  ARCEUSFIRE = 'arceusfire',
  ARCEUSFLYING = 'arceusflying',
  ARCEUSGHOST = 'arceusghost',
  ARCEUSGRASS = 'arceusgrass',
  ARCEUSGROUND = 'arceusground',
  ARCEUSICE = 'arceusice',
  ARCEUSLEGEND = 'arceuslegend',
  ARCEUSPOISON = 'arceuspoison',
  ARCEUSPSYCHIC = 'arceuspsychic',
  ARCEUSROCK = 'arceusrock',
  ARCEUSSTEEL = 'arceussteel',
  ARCEUSWATER = 'arceuswater',
  ARCHEN = 'archen',
  ARCHEOPS = 'archeops',
  ARCTOVISH = 'arctovish',
  ARCTOZOLT = 'arctozolt',
  ARGALIS = 'argalis',
  ARGHONAUT = 'arghonaut',
  ARIADOS = 'ariados',
  ARMALDO = 'armaldo',
  AROMATISSE = 'aromatisse',
  ARON = 'aron',
  ARROKUDA = 'arrokuda',
  ARTICUNO = 'articuno',
  ARTICUNOGALAR = 'articunogalar',
  ASTROLOTL = 'astrolotl',
  AUDINO = 'audino',
  AUDINOMEGA = 'audinomega',
  AURORUS = 'aurorus',
  AURUMOTH = 'aurumoth',
  AVALUGG = 'avalugg',
  AVALUGGHISUI = 'avalugghisui',
  AXEW = 'axew',
  AZELF = 'azelf',
  AZUMARILL = 'azumarill',
  AZURILL = 'azurill',
  BAGON = 'bagon',
  BALTOY = 'baltoy',
  BANETTE = 'banette',
  BANETTEMEGA = 'banettemega',
  BARBARACLE = 'barbaracle',
  BARBOACH = 'barboach',
  BARRASKEWDA = 'barraskewda',
  BASCULEGION = 'basculegion',
  BASCULEGIONF = 'basculegionf',
  BASCULIN = 'basculin',
  BASCULINBLUESTRIPED = 'basculinbluestriped',
  BASCULINWHITESTRIPED = 'basculinwhitestriped',
  BASTIODON = 'bastiodon',
  BAYLEEF = 'bayleef',
  BEARTIC = 'beartic',
  BEAUTIFLY = 'beautifly',
  BEEDRILL = 'beedrill',
  BEEDRILLMEGA = 'beedrillmega',
  BEHEEYEM = 'beheeyem',
  BELDUM = 'beldum',
  BELLOSSOM = 'bellossom',
  BELLSPROUT = 'bellsprout',
  BERGMITE = 'bergmite',
  BEWEAR = 'bewear',
  BIBAREL = 'bibarel',
  BIDOOF = 'bidoof',
  BINACLE = 'binacle',
  BISHARP = 'bisharp',
  BLACEPHALON = 'blacephalon',
  BLASTOISE = 'blastoise',
  BLASTOISEGMAX = 'blastoisegmax',
  BLASTOISEMEGA = 'blastoisemega',
  BLAZIKEN = 'blaziken',
  BLAZIKENMEGA = 'blazikenmega',
  BLIPBUG = 'blipbug',
  BLISSEY = 'blissey',
  BLITZLE = 'blitzle',
  BOLDORE = 'boldore',
  BOLTUND = 'boltund',
  BONSLY = 'bonsly',
  BOUFFALANT = 'bouffalant',
  BOUNSWEET = 'bounsweet',
  BRAIXEN = 'braixen',
  BRATTLER = 'brattler',
  BRAVIARY = 'braviary',
  BRAVIARYHISUI = 'braviaryhisui',
  BREEZI = 'breezi',
  BRELOOM = 'breloom',
  BRIONNE = 'brionne',
  BRONZONG = 'bronzong',
  BRONZOR = 'bronzor',
  BRUXISH = 'bruxish',
  BUDEW = 'budew',
  BUIZEL = 'buizel',
  BULBASAUR = 'bulbasaur',
  BUNEARY = 'buneary',
  BUNNELBY = 'bunnelby',
  BURMY = 'burmy',
  BUTTERFREE = 'butterfree',
  BUTTERFREEGMAX = 'butterfreegmax',
  BUZZWOLE = 'buzzwole',
  CACNEA = 'cacnea',
  CACTURNE = 'cacturne',
  CAIMANOE = 'caimanoe',
  CALYREX = 'calyrex',
  CALYREXICE = 'calyrexice',
  CALYREXSHADOW = 'calyrexshadow',
  CAMERUPT = 'camerupt',
  CAMERUPTMEGA = 'cameruptmega',
  CARBINK = 'carbink',
  CARIBOLT = 'caribolt',
  CARKOL = 'carkol',
  CARNIVINE = 'carnivine',
  CARRACOSTA = 'carracosta',
  CARVANHA = 'carvanha',
  CASCOON = 'cascoon',
  CASTFORM = 'castform',
  CASTFORMRAINY = 'castformrainy',
  CASTFORMSNOWY = 'castformsnowy',
  CASTFORMSUNNY = 'castformsunny',
  CATERPIE = 'caterpie',
  CAWDET = 'cawdet',
  CAWMODORE = 'cawmodore',
  CELEBI = 'celebi',
  CELESTEELA = 'celesteela',
  CENTISKORCH = 'centiskorch',
  CENTISKORCHGMAX = 'centiskorchgmax',
  CHANDELURE = 'chandelure',
  CHANSEY = 'chansey',
  CHARIZARD = 'charizard',
  CHARIZARDGMAX = 'charizardgmax',
  CHARIZARDMEGAX = 'charizardmegax',
  CHARIZARDMEGAY = 'charizardmegay',
  CHARJABUG = 'charjabug',
  CHARMANDER = 'charmander',
  CHARMELEON = 'charmeleon',
  CHATOT = 'chatot',
  CHERRIM = 'cherrim',
  CHERRIMSUNSHINE = 'cherrimsunshine',
  CHERUBI = 'cherubi',
  CHESNAUGHT = 'chesnaught',
  CHESPIN = 'chespin',
  CHEWTLE = 'chewtle',
  CHIKORITA = 'chikorita',
  CHIMCHAR = 'chimchar',
  CHIMECHO = 'chimecho',
  CHINCHOU = 'chinchou',
  CHINGLING = 'chingling',
  CHROMERA = 'chromera',
  CINCCINO = 'cinccino',
  CINDERACE = 'cinderace',
  CINDERACEGMAX = 'cinderacegmax',
  CLAMPERL = 'clamperl',
  CLAUNCHER = 'clauncher',
  CLAWITZER = 'clawitzer',
  CLAYDOL = 'claydol',
  CLEFABLE = 'clefable',
  CLEFAIRY = 'clefairy',
  CLEFFA = 'cleffa',
  CLOBBOPUS = 'clobbopus',
  CLOYSTER = 'cloyster',
  COALOSSAL = 'coalossal',
  COALOSSALGMAX = 'coalossalgmax',
  COBALION = 'cobalion',
  COFAGRIGUS = 'cofagrigus',
  COLOSSOIL = 'colossoil',
  COMBEE = 'combee',
  COMBUSKEN = 'combusken',
  COMFEY = 'comfey',
  CONKELDURR = 'conkeldurr',
  COPPERAJAH = 'copperajah',
  COPPERAJAHGMAX = 'copperajahgmax',
  CORIBALIS = 'coribalis',
  CORPHISH = 'corphish',
  CORSOLA = 'corsola',
  CORSOLAGALAR = 'corsolagalar',
  CORVIKNIGHT = 'corviknight',
  CORVIKNIGHTGMAX = 'corviknightgmax',
  CORVISQUIRE = 'corvisquire',
  COSMOEM = 'cosmoem',
  COSMOG = 'cosmog',
  COTTONEE = 'cottonee',
  CRABOMINABLE = 'crabominable',
  CRABRAWLER = 'crabrawler',
  CRADILY = 'cradily',
  CRAMORANT = 'cramorant',
  CRAMORANTGORGING = 'cramorantgorging',
  CRAMORANTGULPING = 'cramorantgulping',
  CRANIDOS = 'cranidos',
  CRAWDAUNT = 'crawdaunt',
  CRESSELIA = 'cresselia',
  CROAGUNK = 'croagunk',
  CROBAT = 'crobat',
  CROCONAW = 'croconaw',
  CRUCIBELLE = 'crucibelle',
  CRUCIBELLEMEGA = 'crucibellemega',
  CRUSTLE = 'crustle',
  CRYOGONAL = 'cryogonal',
  CUBCHOO = 'cubchoo',
  CUBONE = 'cubone',
  CUFANT = 'cufant',
  CUPRA = 'cupra',
  CURSOLA = 'cursola',
  CUTIEFLY = 'cutiefly',
  CYCLOHM = 'cyclohm',
  CYNDAQUIL = 'cyndaquil',
  DARKRAI = 'darkrai',
  DARMANITAN = 'darmanitan',
  DARMANITANGALAR = 'darmanitangalar',
  DARMANITANGALARZEN = 'darmanitangalarzen',
  DARMANITANZEN = 'darmanitanzen',
  DARTRIX = 'dartrix',
  DARUMAKA = 'darumaka',
  DARUMAKAGALAR = 'darumakagalar',
  DECIDUEYE = 'decidueye',
  DECIDUEYEHISUI = 'decidueyehisui',
  DEDENNE = 'dedenne',
  DEERLING = 'deerling',
  DEINO = 'deino',
  DELCATTY = 'delcatty',
  DELIBIRD = 'delibird',
  DELPHOX = 'delphox',
  DEOXYS = 'deoxys',
  DEOXYSATTACK = 'deoxysattack',
  DEOXYSDEFENSE = 'deoxysdefense',
  DEOXYSSPEED = 'deoxysspeed',
  DEWGONG = 'dewgong',
  DEWOTT = 'dewott',
  DEWPIDER = 'dewpider',
  DHELMISE = 'dhelmise',
  DIALGA = 'dialga',
  DIALGAORIGIN = 'dialgaorigin',
  DIANCIE = 'diancie',
  DIANCIEMEGA = 'dianciemega',
  DIGGERSBY = 'diggersby',
  DIGLETT = 'diglett',
  DIGLETTALOLA = 'diglettalola',
  DITTO = 'ditto',
  DODRIO = 'dodrio',
  DODUO = 'doduo',
  DONPHAN = 'donphan',
  DORSOIL = 'dorsoil',
  DOTTLER = 'dottler',
  DOUBLADE = 'doublade',
  DRACOVISH = 'dracovish',
  DRACOZOLT = 'dracozolt',
  DRAGALGE = 'dragalge',
  DRAGAPULT = 'dragapult',
  DRAGONAIR = 'dragonair',
  DRAGONITE = 'dragonite',
  DRAKLOAK = 'drakloak',
  DRAMPA = 'drampa',
  DRAPION = 'drapion',
  DRATINI = 'dratini',
  DREDNAW = 'drednaw',
  DREDNAWGMAX = 'drednawgmax',
  DREEPY = 'dreepy',
  DRIFBLIM = 'drifblim',
  DRIFLOON = 'drifloon',
  DRILBUR = 'drilbur',
  DRIZZILE = 'drizzile',
  DROWZEE = 'drowzee',
  DRUDDIGON = 'druddigon',
  DUBWOOL = 'dubwool',
  DUCKLETT = 'ducklett',
  DUGTRIO = 'dugtrio',
  DUGTRIOALOLA = 'dugtrioalola',
  DUNSPARCE = 'dunsparce',
  DUOHM = 'duohm',
  DUOSION = 'duosion',
  DURALUDON = 'duraludon',
  DURALUDONGMAX = 'duraludongmax',
  DURANT = 'durant',
  DUSCLOPS = 'dusclops',
  DUSKNOIR = 'dusknoir',
  DUSKULL = 'duskull',
  DUSTOX = 'dustox',
  DWEBBLE = 'dwebble',
  EELEKTRIK = 'eelektrik',
  EELEKTROSS = 'eelektross',
  EEVEE = 'eevee',
  EEVEEGMAX = 'eeveegmax',
  EEVEESTARTER = 'eeveestarter',
  EISCUE = 'eiscue',
  EISCUENOICE = 'eiscuenoice',
  EKANS = 'ekans',
  ELDEGOSS = 'eldegoss',
  ELECTABUZZ = 'electabuzz',
  ELECTIVIRE = 'electivire',
  ELECTRELK = 'electrelk',
  ELECTRIKE = 'electrike',
  ELECTRODE = 'electrode',
  ELECTRODEHISUI = 'electrodehisui',
  ELEKID = 'elekid',
  ELGYEM = 'elgyem',
  EMBIRCH = 'embirch',
  EMBOAR = 'emboar',
  EMOLGA = 'emolga',
  EMPOLEON = 'empoleon',
  ENAMORUS = 'enamorus',
  ENAMORUSTHERIAN = 'enamorustherian',
  ENTEI = 'entei',
  EQUILIBRA = 'equilibra',
  ESCAVALIER = 'escavalier',
  ESPEON = 'espeon',
  ESPURR = 'espurr',
  ETERNATUS = 'eternatus',
  ETERNATUSETERNAMAX = 'eternatuseternamax',
  EXCADRILL = 'excadrill',
  EXEGGCUTE = 'exeggcute',
  EXEGGUTOR = 'exeggutor',
  EXEGGUTORALOLA = 'exeggutoralola',
  EXPLOUD = 'exploud',
  FALINKS = 'falinks',
  FARFETCHD = 'farfetchd',
  FARFETCHDGALAR = 'farfetchdgalar',
  FAWNIFER = 'fawnifer',
  FEAROW = 'fearow',
  FEEBAS = 'feebas',
  FENNEKIN = 'fennekin',
  FERALIGATR = 'feraligatr',
  FERROSEED = 'ferroseed',
  FERROTHORN = 'ferrothorn',
  FIDGIT = 'fidgit',
  FINNEON = 'finneon',
  FLAAFFY = 'flaaffy',
  FLABEBE = 'flabebe',
  FLAPPLE = 'flapple',
  FLAPPLEGMAX = 'flapplegmax',
  FLARELM = 'flarelm',
  FLAREON = 'flareon',
  FLETCHINDER = 'fletchinder',
  FLETCHLING = 'fletchling',
  FLOATOY = 'floatoy',
  FLOATZEL = 'floatzel',
  FLOETTE = 'floette',
  FLOETTEETERNAL = 'floetteeternal',
  FLORGES = 'florges',
  FLYGON = 'flygon',
  FOMANTIS = 'fomantis',
  FOONGUS = 'foongus',
  FORRETRESS = 'forretress',
  FRAXURE = 'fraxure',
  FRILLISH = 'frillish',
  FRILLISHFEMALE = 'frillishfemale',
  FROAKIE = 'froakie',
  FROGADIER = 'frogadier',
  FROSLASS = 'froslass',
  FROSMOTH = 'frosmoth',
  FURFROU = 'furfrou',
  FURRET = 'furret',
  GABITE = 'gabite',
  GALLADE = 'gallade',
  GALLADEMEGA = 'gallademega',
  GALVANTULA = 'galvantula',
  GARBODOR = 'garbodor',
  GARBODORGMAX = 'garbodorgmax',
  GARCHOMP = 'garchomp',
  GARCHOMPMEGA = 'garchompmega',
  GARDEVOIR = 'gardevoir',
  GARDEVOIRMEGA = 'gardevoirmega',
  GASTLY = 'gastly',
  GASTRODON = 'gastrodon',
  GENESECT = 'genesect',
  GENESECTBURN = 'genesectburn',
  GENESECTCHILL = 'genesectchill',
  GENESECTDOUSE = 'genesectdouse',
  GENESECTSHOCK = 'genesectshock',
  GENGAR = 'gengar',
  GENGARGMAX = 'gengargmax',
  GENGARMEGA = 'gengarmega',
  GEODUDE = 'geodude',
  GEODUDEALOLA = 'geodudealola',
  GIBLE = 'gible',
  GIGALITH = 'gigalith',
  GIRAFARIG = 'girafarig',
  GIRATINA = 'giratina',
  GIRATINAORIGIN = 'giratinaorigin',
  GLACEON = 'glaceon',
  GLALIE = 'glalie',
  GLALIEMEGA = 'glaliemega',
  GLAMEOW = 'glameow',
  GLASTRIER = 'glastrier',
  GLIGAR = 'gligar',
  GLISCOR = 'gliscor',
  GLOOM = 'gloom',
  GOGOAT = 'gogoat',
  GOLBAT = 'golbat',
  GOLDEEN = 'goldeen',
  GOLDUCK = 'golduck',
  GOLEM = 'golem',
  GOLEMALOLA = 'golemalola',
  GOLETT = 'golett',
  GOLISOPOD = 'golisopod',
  GOLURK = 'golurk',
  GOODRA = 'goodra',
  GOODRAHISUI = 'goodrahisui',
  GOOMY = 'goomy',
  GOREBYSS = 'gorebyss',
  GOSSIFLEUR = 'gossifleur',
  GOTHITA = 'gothita',
  GOTHITELLE = 'gothitelle',
  GOTHORITA = 'gothorita',
  GOURGEIST = 'gourgeist',
  GOURGEISTLARGE = 'gourgeistlarge',
  GOURGEISTSMALL = 'gourgeistsmall',
  GOURGEISTSUPER = 'gourgeistsuper',
  GRANBULL = 'granbull',
  GRAPPLOCT = 'grapploct',
  GRAVELER = 'graveler',
  GRAVELERALOLA = 'graveleralola',
  GREEDENT = 'greedent',
  GRENINJA = 'greninja',
  GRENINJAASH = 'greninjaash',
  GRIMER = 'grimer',
  GRIMERALOLA = 'grimeralola',
  GRIMMSNARL = 'grimmsnarl',
  GRIMMSNARLGMAX = 'grimmsnarlgmax',
  GROOKEY = 'grookey',
  GROTLE = 'grotle',
  GROUDON = 'groudon',
  GROUDONPRIMAL = 'groudonprimal',
  GROVYLE = 'grovyle',
  GROWLITHE = 'growlithe',
  GROWLITHEHISUI = 'growlithehisui',
  GRUBBIN = 'grubbin',
  GRUMPIG = 'grumpig',
  GULPIN = 'gulpin',
  GUMSHOOS = 'gumshoos',
  GUMSHOOSTOTEM = 'gumshoostotem',
  GURDURR = 'gurdurr',
  GUZZLORD = 'guzzlord',
  GYARADOS = 'gyarados',
  GYARADOSMEGA = 'gyaradosmega',
  HAKAMOO = 'hakamoo',
  HAPPINY = 'happiny',
  HARIYAMA = 'hariyama',
  HATENNA = 'hatenna',
  HATTERENE = 'hatterene',
  HATTERENEGMAX = 'hatterenegmax',
  HATTREM = 'hattrem',
  HAUNTER = 'haunter',
  HAWLUCHA = 'hawlucha',
  HAXORUS = 'haxorus',
  HEATMOR = 'heatmor',
  HEATRAN = 'heatran',
  HELIOLISK = 'heliolisk',
  HELIOPTILE = 'helioptile',
  HERACROSS = 'heracross',
  HERACROSSMEGA = 'heracrossmega',
  HERDIER = 'herdier',
  HIPPOPOTAS = 'hippopotas',
  HIPPOWDON = 'hippowdon',
  HITMONCHAN = 'hitmonchan',
  HITMONLEE = 'hitmonlee',
  HITMONTOP = 'hitmontop',
  HONCHKROW = 'honchkrow',
  HONEDGE = 'honedge',
  HOOH = 'hooh',
  HOOPA = 'hoopa',
  HOOPAUNBOUND = 'hoopaunbound',
  HOOTHOOT = 'hoothoot',
  HOPPIP = 'hoppip',
  HORSEA = 'horsea',
  HOUNDOOM = 'houndoom',
  HOUNDOOMMEGA = 'houndoommega',
  HOUNDOUR = 'houndour',
  HUNTAIL = 'huntail',
  HYDREIGON = 'hydreigon',
  HYPNO = 'hypno',
  IGGLYBUFF = 'igglybuff',
  ILLUMISE = 'illumise',
  IMPIDIMP = 'impidimp',
  INCINEROAR = 'incineroar',
  INDEEDEE = 'indeedee',
  INDEEDEEF = 'indeedeef',
  INFERNAPE = 'infernape',
  INKAY = 'inkay',
  INTELEON = 'inteleon',
  INTELEONGMAX = 'inteleongmax',
  IVYSAUR = 'ivysaur',
  JANGMOO = 'jangmoo',
  JELLICENT = 'jellicent',
  JELLICENTFEMALE = 'jellicentfemale',
  JIGGLYPUFF = 'jigglypuff',
  JIRACHI = 'jirachi',
  JOLTEON = 'jolteon',
  JOLTIK = 'joltik',
  JUMBAO = 'jumbao',
  JUMPLUFF = 'jumpluff',
  JUSTYKE = 'justyke',
  JYNX = 'jynx',
  KABUTO = 'kabuto',
  KABUTOPS = 'kabutops',
  KADABRA = 'kadabra',
  KAKUNA = 'kakuna',
  KANGASKHAN = 'kangaskhan',
  KANGASKHANMEGA = 'kangaskhanmega',
  KARRABLAST = 'karrablast',
  KARTANA = 'kartana',
  KECLEON = 'kecleon',
  KELDEO = 'keldeo',
  KELDEORESOLUTE = 'keldeoresolute',
  KERFLUFFLE = 'kerfluffle',
  KINGDRA = 'kingdra',
  KINGLER = 'kingler',
  KINGLERGMAX = 'kinglergmax',
  KIRLIA = 'kirlia',
  KITSUNOH = 'kitsunoh',
  KLANG = 'klang',
  KLEAVOR = 'kleavor',
  KLEFKI = 'klefki',
  KLINK = 'klink',
  KLINKLANG = 'klinklang',
  KOFFING = 'koffing',
  KOMALA = 'komala',
  KOMMOO = 'kommoo',
  KOMMOOTOTEM = 'kommoototem',
  KRABBY = 'krabby',
  KRICKETOT = 'kricketot',
  KRICKETUNE = 'kricketune',
  KRILOWATT = 'krilowatt',
  KROKOROK = 'krokorok',
  KROOKODILE = 'krookodile',
  KUBFU = 'kubfu',
  KYOGRE = 'kyogre',
  KYOGREPRIMAL = 'kyogreprimal',
  KYUREM = 'kyurem',
  KYUREMBLACK = 'kyuremblack',
  KYUREMWHITE = 'kyuremwhite',
  LAIRON = 'lairon',
  LAMPENT = 'lampent',
  LANDORUS = 'landorus',
  LANDORUSTHERIAN = 'landorustherian',
  LANTURN = 'lanturn',
  LAPRAS = 'lapras',
  LAPRASGMAX = 'laprasgmax',
  LARVESTA = 'larvesta',
  LARVITAR = 'larvitar',
  LATIAS = 'latias',
  LATIASMEGA = 'latiasmega',
  LATIOS = 'latios',
  LATIOSMEGA = 'latiosmega',
  LEAFEON = 'leafeon',
  LEAVANNY = 'leavanny',
  LEDIAN = 'ledian',
  LEDYBA = 'ledyba',
  LICKILICKY = 'lickilicky',
  LICKITUNG = 'lickitung',
  LIEPARD = 'liepard',
  LILEEP = 'lileep',
  LILLIGANT = 'lilligant',
  LILLIGANTHISUI = 'lilliganthisui',
  LILLIPUP = 'lillipup',
  LINOONE = 'linoone',
  LINOONEGALAR = 'linoonegalar',
  LITLEO = 'litleo',
  LITTEN = 'litten',
  LITWICK = 'litwick',
  LOMBRE = 'lombre',
  LOPUNNY = 'lopunny',
  LOPUNNYMEGA = 'lopunnymega',
  LOTAD = 'lotad',
  LOUDRED = 'loudred',
  LUCARIO = 'lucario',
  LUCARIOMEGA = 'lucariomega',
  LUDICOLO = 'ludicolo',
  LUGIA = 'lugia',
  LUMINEON = 'lumineon',
  LUNALA = 'lunala',
  LUNATONE = 'lunatone',
  LURANTIS = 'lurantis',
  LURANTISTOTEM = 'lurantistotem',
  LUVDISC = 'luvdisc',
  LUXIO = 'luxio',
  LUXRAY = 'luxray',
  LYCANROC = 'lycanroc',
  LYCANROCDUSK = 'lycanrocdusk',
  LYCANROCMIDNIGHT = 'lycanrocmidnight',
  MACHAMP = 'machamp',
  MACHAMPGMAX = 'machampgmax',
  MACHOKE = 'machoke',
  MACHOP = 'machop',
  MAGBY = 'magby',
  MAGCARGO = 'magcargo',
  MAGEARNA = 'magearna',
  MAGEARNAORIGINAL = 'magearnaoriginal',
  MAGIKARP = 'magikarp',
  MAGMAR = 'magmar',
  MAGMORTAR = 'magmortar',
  MAGNEMITE = 'magnemite',
  MAGNETON = 'magneton',
  MAGNEZONE = 'magnezone',
  MAKUHITA = 'makuhita',
  MALACONDA = 'malaconda',
  MALAMAR = 'malamar',
  MAMOSWINE = 'mamoswine',
  MANAPHY = 'manaphy',
  MANDIBUZZ = 'mandibuzz',
  MANECTRIC = 'manectric',
  MANECTRICMEGA = 'manectricmega',
  MANKEY = 'mankey',
  MANTINE = 'mantine',
  MANTYKE = 'mantyke',
  MARACTUS = 'maractus',
  MAREANIE = 'mareanie',
  MAREEP = 'mareep',
  MARILL = 'marill',
  MAROWAK = 'marowak',
  MAROWAKALOLA = 'marowakalola',
  MAROWAKALOLATOTEM = 'marowakalolatotem',
  MARSHADOW = 'marshadow',
  MARSHTOMP = 'marshtomp',
  MASQUERAIN = 'masquerain',
  MAWILE = 'mawile',
  MAWILEMEGA = 'mawilemega',
  MEDICHAM = 'medicham',
  MEDICHAMMEGA = 'medichammega',
  MEDITITE = 'meditite',
  MEGANIUM = 'meganium',
  MELMETAL = 'melmetal',
  MELMETALGMAX = 'melmetalgmax',
  MELOETTA = 'meloetta',
  MELOETTAPIROUETTE = 'meloettapirouette',
  MELTAN = 'meltan',
  MEOWSTIC = 'meowstic',
  MEOWSTICF = 'meowsticf',
  MEOWTH = 'meowth',
  MEOWTHALOLA = 'meowthalola',
  MEOWTHGALAR = 'meowthgalar',
  MEOWTHGMAX = 'meowthgmax',
  MESPRIT = 'mesprit',
  METAGROSS = 'metagross',
  METAGROSSMEGA = 'metagrossmega',
  METANG = 'metang',
  METAPOD = 'metapod',
  MEW = 'mew',
  MEWTWO = 'mewtwo',
  MEWTWOMEGAX = 'mewtwomegax',
  MEWTWOMEGAY = 'mewtwomegay',
  MIASMAW = 'miasmaw',
  MIASMITE = 'miasmite',
  MIENFOO = 'mienfoo',
  MIENSHAO = 'mienshao',
  MIGHTYENA = 'mightyena',
  MILCERY = 'milcery',
  MILOTIC = 'milotic',
  MILTANK = 'miltank',
  MIMEJR = 'mimejr',
  MIMIKYU = 'mimikyu',
  MIMIKYUBUSTED = 'mimikyubusted',
  MIMIKYUBUSTEDTOTEM = 'mimikyubustedtotem',
  MIMIKYUTOTEM = 'mimikyutotem',
  MINCCINO = 'minccino',
  MINIOR = 'minior',
  MINIORMETEOR = 'miniormeteor',
  MINUN = 'minun',
  MISDREAVUS = 'misdreavus',
  MISMAGIUS = 'mismagius',
  MISSINGNO = 'missingno',
  MOLLUX = 'mollux',
  MOLTRES = 'moltres',
  MOLTRESGALAR = 'moltresgalar',
  MONFERNO = 'monferno',
  MONOHM = 'monohm',
  MORELULL = 'morelull',
  MORGREM = 'morgrem',
  MORPEKO = 'morpeko',
  MORPEKOHANGRY = 'morpekohangry',
  MOTHIM = 'mothim',
  MRMIME = 'mrmime',
  MRMIMEGALAR = 'mrmimegalar',
  MRRIME = 'mrrime',
  MUDBRAY = 'mudbray',
  MUDKIP = 'mudkip',
  MUDSDALE = 'mudsdale',
  MUK = 'muk',
  MUKALOLA = 'mukalola',
  MUMBAO = 'mumbao',
  MUNCHLAX = 'munchlax',
  MUNNA = 'munna',
  MURKROW = 'murkrow',
  MUSHARNA = 'musharna',
  NAGANADEL = 'naganadel',
  NATU = 'natu',
  NAVIATHAN = 'naviathan',
  NECROZMA = 'necrozma',
  NECROZMADAWNWINGS = 'necrozmadawnwings',
  NECROZMADUSKMANE = 'necrozmaduskmane',
  NECROZMAULTRA = 'necrozmaultra',
  NECTURINE = 'necturine',
  NECTURNA = 'necturna',
  NICKIT = 'nickit',
  NIDOKING = 'nidoking',
  NIDOQUEEN = 'nidoqueen',
  NIDORANF = 'nidoranf',
  NIDORANM = 'nidoranm',
  NIDORINA = 'nidorina',
  NIDORINO = 'nidorino',
  NIHILEGO = 'nihilego',
  NINCADA = 'nincada',
  NINETALES = 'ninetales',
  NINETALESALOLA = 'ninetalesalola',
  NINJASK = 'ninjask',
  NOCTOWL = 'noctowl',
  NOHFACE = 'nohface',
  NOIBAT = 'noibat',
  NOIVERN = 'noivern',
  NOSEPASS = 'nosepass',
  NUMEL = 'numel',
  NUZLEAF = 'nuzleaf',
  OBSTAGOON = 'obstagoon',
  OCTILLERY = 'octillery',
  ODDISH = 'oddish',
  OMANYTE = 'omanyte',
  OMASTAR = 'omastar',
  ONIX = 'onix',
  ORANGURU = 'oranguru',
  ORBEETLE = 'orbeetle',
  ORBEETLEGMAX = 'orbeetlegmax',
  ORICORIO = 'oricorio',
  ORICORIOPAU = 'oricoriopau',
  ORICORIOPOMPOM = 'oricoriopompom',
  ORICORIOSENSU = 'oricoriosensu',
  OSHAWOTT = 'oshawott',
  OVERQWIL = 'overqwil',
  PACHIRISU = 'pachirisu',
  PAJANTOM = 'pajantom',
  PALKIA = 'palkia',
  PALKIAORIGIN = 'palkiaorigin',
  PALOSSAND = 'palossand',
  PALPITOAD = 'palpitoad',
  PANCHAM = 'pancham',
  PANGORO = 'pangoro',
  PANPOUR = 'panpour',
  PANSAGE = 'pansage',
  PANSEAR = 'pansear',
  PARAS = 'paras',
  PARASECT = 'parasect',
  PASSIMIAN = 'passimian',
  PATRAT = 'patrat',
  PAWNIARD = 'pawniard',
  PELIPPER = 'pelipper',
  PERRSERKER = 'perrserker',
  PERSIAN = 'persian',
  PERSIANALOLA = 'persianalola',
  PETILIL = 'petilil',
  PHANPY = 'phanpy',
  PHANTUMP = 'phantump',
  PHEROMOSA = 'pheromosa',
  PHIONE = 'phione',
  PICHU = 'pichu',
  PICHUSPIKYEARED = 'pichuspikyeared',
  PIDGEOT = 'pidgeot',
  PIDGEOTMEGA = 'pidgeotmega',
  PIDGEOTTO = 'pidgeotto',
  PIDGEY = 'pidgey',
  PIDOVE = 'pidove',
  PIGNITE = 'pignite',
  PIKACHU = 'pikachu',
  PIKACHUALOLA = 'pikachualola',
  PIKACHUBELLE = 'pikachubelle',
  PIKACHUCOSPLAY = 'pikachucosplay',
  PIKACHUGMAX = 'pikachugmax',
  PIKACHUHOENN = 'pikachuhoenn',
  PIKACHUKALOS = 'pikachukalos',
  PIKACHULIBRE = 'pikachulibre',
  PIKACHUORIGINAL = 'pikachuoriginal',
  PIKACHUPARTNER = 'pikachupartner',
  PIKACHUPHD = 'pikachuphd',
  PIKACHUPOPSTAR = 'pikachupopstar',
  PIKACHUROCKSTAR = 'pikachurockstar',
  PIKACHUSINNOH = 'pikachusinnoh',
  PIKACHUSTARTER = 'pikachustarter',
  PIKACHUUNOVA = 'pikachuunova',
  PIKACHUWORLD = 'pikachuworld',
  PIKIPEK = 'pikipek',
  PILOSWINE = 'piloswine',
  PINCURCHIN = 'pincurchin',
  PINECO = 'pineco',
  PINSIR = 'pinsir',
  PINSIRMEGA = 'pinsirmega',
  PIPLUP = 'piplup',
  PLASMANTA = 'plasmanta',
  PLUFFLE = 'pluffle',
  PLUSLE = 'plusle',
  POIPOLE = 'poipole',
  POKESTARBLACKBELT = 'pokestarblackbelt',
  POKESTARBLACKDOOR = 'pokestarblackdoor',
  POKESTARBRYCENMAN = 'pokestarbrycenman',
  POKESTARF00 = 'pokestarf00',
  POKESTARF002 = 'pokestarf002',
  POKESTARGIANT = 'pokestargiant',
  POKESTARHUMANOID = 'pokestarhumanoid',
  POKESTARMONSTER = 'pokestarmonster',
  POKESTARMT = 'pokestarmt',
  POKESTARMT2 = 'pokestarmt2',
  POKESTARSMEARGLE = 'pokestarsmeargle',
  POKESTARSPIRIT = 'pokestarspirit',
  POKESTARTRANSPORT = 'pokestartransport',
  POKESTARUFO = 'pokestarufo',
  POKESTARUFO2 = 'pokestarufo2',
  POKESTARUFOPROPU2 = 'pokestarufopropu2',
  POKESTARWHITEDOOR = 'pokestarwhitedoor',
  POLITOED = 'politoed',
  POLIWAG = 'poliwag',
  POLIWHIRL = 'poliwhirl',
  POLIWRATH = 'poliwrath',
  POLTEAGEIST = 'polteageist',
  POLTEAGEISTANTIQUE = 'polteageistantique',
  PONYTA = 'ponyta',
  PONYTAGALAR = 'ponytagalar',
  POOCHYENA = 'poochyena',
  POPPLIO = 'popplio',
  PORYGON = 'porygon',
  PORYGON2 = 'porygon2',
  PORYGONZ = 'porygonz',
  PRIMARINA = 'primarina',
  PRIMEAPE = 'primeape',
  PRINPLUP = 'prinplup',
  PRIVATYKE = 'privatyke',
  PROBOPASS = 'probopass',
  PROTOWATT = 'protowatt',
  PSYDUCK = 'psyduck',
  PUMPKABOO = 'pumpkaboo',
  PUMPKABOOLARGE = 'pumpkaboolarge',
  PUMPKABOOSMALL = 'pumpkaboosmall',
  PUMPKABOOSUPER = 'pumpkaboosuper',
  PUPITAR = 'pupitar',
  PURRLOIN = 'purrloin',
  PURUGLY = 'purugly',
  PYROAK = 'pyroak',
  PYROAR = 'pyroar',
  PYUKUMUKU = 'pyukumuku',
  QUAGSIRE = 'quagsire',
  QUILAVA = 'quilava',
  QUILLADIN = 'quilladin',
  QWILFISH = 'qwilfish',
  QWILFISHHISUI = 'qwilfishhisui',
  RABOOT = 'raboot',
  RAICHU = 'raichu',
  RAICHUALOLA = 'raichualola',
  RAIKOU = 'raikou',
  RALTS = 'ralts',
  RAMPARDOS = 'rampardos',
  RAPIDASH = 'rapidash',
  RAPIDASHGALAR = 'rapidashgalar',
  RATICATE = 'raticate',
  RATICATEALOLA = 'raticatealola',
  RATICATEALOLATOTEM = 'raticatealolatotem',
  RATTATA = 'rattata',
  RATTATAALOLA = 'rattataalola',
  RAYQUAZA = 'rayquaza',
  RAYQUAZAMEGA = 'rayquazamega',
  REBBLE = 'rebble',
  REGICE = 'regice',
  REGIDRAGO = 'regidrago',
  REGIELEKI = 'regieleki',
  REGIGIGAS = 'regigigas',
  REGIROCK = 'regirock',
  REGISTEEL = 'registeel',
  RELICANTH = 'relicanth',
  REMORAID = 'remoraid',
  RESHIRAM = 'reshiram',
  REUNICLUS = 'reuniclus',
  REVENANKH = 'revenankh',
  RHYDON = 'rhydon',
  RHYHORN = 'rhyhorn',
  RHYPERIOR = 'rhyperior',
  RIBOMBEE = 'ribombee',
  RIBOMBEETOTEM = 'ribombeetotem',
  RILLABOOM = 'rillaboom',
  RILLABOOMGMAX = 'rillaboomgmax',
  RIOLU = 'riolu',
  ROCKRUFF = 'rockruff',
  ROGGENROLA = 'roggenrola',
  ROLYCOLY = 'rolycoly',
  ROOKIDEE = 'rookidee',
  ROSELIA = 'roselia',
  ROSERADE = 'roserade',
  ROTOM = 'rotom',
  ROTOMFAN = 'rotomfan',
  ROTOMFROST = 'rotomfrost',
  ROTOMHEAT = 'rotomheat',
  ROTOMMOW = 'rotommow',
  ROTOMWASH = 'rotomwash',
  ROWLET = 'rowlet',
  RUFFLET = 'rufflet',
  RUNERIGUS = 'runerigus',
  SABLEYE = 'sableye',
  SABLEYEMEGA = 'sableyemega',
  SALAMENCE = 'salamence',
  SALAMENCEMEGA = 'salamencemega',
  SALANDIT = 'salandit',
  SALAZZLE = 'salazzle',
  SALAZZLETOTEM = 'salazzletotem',
  SAMUROTT = 'samurott',
  SAMUROTTHISUI = 'samurotthisui',
  SANDACONDA = 'sandaconda',
  SANDACONDAGMAX = 'sandacondagmax',
  SANDILE = 'sandile',
  SANDSHREW = 'sandshrew',
  SANDSHREWALOLA = 'sandshrewalola',
  SANDSLASH = 'sandslash',
  SANDSLASHALOLA = 'sandslashalola',
  SANDYGAST = 'sandygast',
  SAWK = 'sawk',
  SAWSBUCK = 'sawsbuck',
  SCATTERBUG = 'scatterbug',
  SCEPTILE = 'sceptile',
  SCEPTILEMEGA = 'sceptilemega',
  SCIZOR = 'scizor',
  SCIZORMEGA = 'scizormega',
  SCOLIPEDE = 'scolipede',
  SCORBUNNY = 'scorbunny',
  SCRAFTY = 'scrafty',
  SCRAGGY = 'scraggy',
  SCRATCHET = 'scratchet',
  SCYTHER = 'scyther',
  SEADRA = 'seadra',
  SEAKING = 'seaking',
  SEALEO = 'sealeo',
  SEEDOT = 'seedot',
  SEEL = 'seel',
  SEISMITOAD = 'seismitoad',
  SENTRET = 'sentret',
  SERPERIOR = 'serperior',
  SERVINE = 'servine',
  SEVIPER = 'seviper',
  SEWADDLE = 'sewaddle',
  SHARPEDO = 'sharpedo',
  SHARPEDOMEGA = 'sharpedomega',
  SHAYMIN = 'shaymin',
  SHAYMINSKY = 'shayminsky',
  SHEDINJA = 'shedinja',
  SHELGON = 'shelgon',
  SHELLDER = 'shellder',
  SHELLOS = 'shellos',
  SHELMET = 'shelmet',
  SHIELDON = 'shieldon',
  SHIFTRY = 'shiftry',
  SHIINOTIC = 'shiinotic',
  SHINX = 'shinx',
  SHROOMISH = 'shroomish',
  SHUCKLE = 'shuckle',
  SHUPPET = 'shuppet',
  SIGILYPH = 'sigilyph',
  SILCOON = 'silcoon',
  SILICOBRA = 'silicobra',
  SILVALLY = 'silvally',
  SILVALLYBUG = 'silvallybug',
  SILVALLYDARK = 'silvallydark',
  SILVALLYDRAGON = 'silvallydragon',
  SILVALLYELECTRIC = 'silvallyelectric',
  SILVALLYFAIRY = 'silvallyfairy',
  SILVALLYFIGHTING = 'silvallyfighting',
  SILVALLYFIRE = 'silvallyfire',
  SILVALLYFLYING = 'silvallyflying',
  SILVALLYGHOST = 'silvallyghost',
  SILVALLYGRASS = 'silvallygrass',
  SILVALLYGROUND = 'silvallyground',
  SILVALLYICE = 'silvallyice',
  SILVALLYPOISON = 'silvallypoison',
  SILVALLYPSYCHIC = 'silvallypsychic',
  SILVALLYROCK = 'silvallyrock',
  SILVALLYSTEEL = 'silvallysteel',
  SILVALLYWATER = 'silvallywater',
  SIMIPOUR = 'simipour',
  SIMISAGE = 'simisage',
  SIMISEAR = 'simisear',
  SINISTEA = 'sinistea',
  SINISTEAANTIQUE = 'sinisteaantique',
  SIRFETCHD = 'sirfetchd',
  SIZZLIPEDE = 'sizzlipede',
  SKARMORY = 'skarmory',
  SKIDDO = 'skiddo',
  SKIPLOOM = 'skiploom',
  SKITTY = 'skitty',
  SKORUPI = 'skorupi',
  SKRELP = 'skrelp',
  SKUNTANK = 'skuntank',
  SKWOVET = 'skwovet',
  SLAKING = 'slaking',
  SLAKOTH = 'slakoth',
  SLIGGOO = 'sliggoo',
  SLIGGOOHISUI = 'sliggoohisui',
  SLOWBRO = 'slowbro',
  SLOWBROGALAR = 'slowbrogalar',
  SLOWBROMEGA = 'slowbromega',
  SLOWKING = 'slowking',
  SLOWKINGGALAR = 'slowkinggalar',
  SLOWPOKE = 'slowpoke',
  SLOWPOKEGALAR = 'slowpokegalar',
  SLUGMA = 'slugma',
  SLURPUFF = 'slurpuff',
  SMEARGLE = 'smeargle',
  SMOGECKO = 'smogecko',
  SMOGUANA = 'smoguana',
  SMOKOMODO = 'smokomodo',
  SMOOCHUM = 'smoochum',
  SNAELSTROM = 'snaelstrom',
  SNEASEL = 'sneasel',
  SNEASELHISUI = 'sneaselhisui',
  SNEASLER = 'sneasler',
  SNIVY = 'snivy',
  SNOM = 'snom',
  SNORLAX = 'snorlax',
  SNORLAXGMAX = 'snorlaxgmax',
  SNORUNT = 'snorunt',
  SNOVER = 'snover',
  SNUBBULL = 'snubbull',
  SNUGGLOW = 'snugglow',
  SOBBLE = 'sobble',
  SOLGALEO = 'solgaleo',
  SOLOSIS = 'solosis',
  SOLOTL = 'solotl',
  SOLROCK = 'solrock',
  SPEAROW = 'spearow',
  SPECTRIER = 'spectrier',
  SPEWPA = 'spewpa',
  SPHEAL = 'spheal',
  SPINARAK = 'spinarak',
  SPINDA = 'spinda',
  SPIRITOMB = 'spiritomb',
  SPOINK = 'spoink',
  SPRITZEE = 'spritzee',
  SQUIRTLE = 'squirtle',
  STAKATAKA = 'stakataka',
  STANTLER = 'stantler',
  STARAPTOR = 'staraptor',
  STARAVIA = 'staravia',
  STARLY = 'starly',
  STARMIE = 'starmie',
  STARYU = 'staryu',
  STEELIX = 'steelix',
  STEELIXMEGA = 'steelixmega',
  STEENEE = 'steenee',
  STONJOURNER = 'stonjourner',
  STOUTLAND = 'stoutland',
  STRATAGEM = 'stratagem',
  STUFFUL = 'stufful',
  STUNFISK = 'stunfisk',
  STUNFISKGALAR = 'stunfiskgalar',
  STUNKY = 'stunky',
  SUDOWOODO = 'sudowoodo',
  SUICUNE = 'suicune',
  SUNFLORA = 'sunflora',
  SUNKERN = 'sunkern',
  SURSKIT = 'surskit',
  SWABLU = 'swablu',
  SWADLOON = 'swadloon',
  SWALOT = 'swalot',
  SWAMPERT = 'swampert',
  SWAMPERTMEGA = 'swampertmega',
  SWANNA = 'swanna',
  SWELLOW = 'swellow',
  SWINUB = 'swinub',
  SWIRLIX = 'swirlix',
  SWIRLPOOL = 'swirlpool',
  SWOOBAT = 'swoobat',
  SYCLANT = 'syclant',
  SYCLAR = 'syclar',
  SYLVEON = 'sylveon',
  TACTITE = 'tactite',
  TAILLOW = 'taillow',
  TALONFLAME = 'talonflame',
  TANGELA = 'tangela',
  TANGROWTH = 'tangrowth',
  TAPUBULU = 'tapubulu',
  TAPUFINI = 'tapufini',
  TAPUKOKO = 'tapukoko',
  TAPULELE = 'tapulele',
  TAUROS = 'tauros',
  TEDDIURSA = 'teddiursa',
  TENTACOOL = 'tentacool',
  TENTACRUEL = 'tentacruel',
  TEPIG = 'tepig',
  TERRAKION = 'terrakion',
  THIEVUL = 'thievul',
  THROH = 'throh',
  THUNDURUS = 'thundurus',
  THUNDURUSTHERIAN = 'thundurustherian',
  THWACKEY = 'thwackey',
  TIMBURR = 'timburr',
  TIRTOUGA = 'tirtouga',
  TOGEDEMARU = 'togedemaru',
  TOGEDEMARUTOTEM = 'togedemarutotem',
  TOGEKISS = 'togekiss',
  TOGEPI = 'togepi',
  TOGETIC = 'togetic',
  TOMOHAWK = 'tomohawk',
  TORCHIC = 'torchic',
  TORKOAL = 'torkoal',
  TORNADUS = 'tornadus',
  TORNADUSTHERIAN = 'tornadustherian',
  TORRACAT = 'torracat',
  TORTERRA = 'torterra',
  TOTODILE = 'totodile',
  TOUCANNON = 'toucannon',
  TOXAPEX = 'toxapex',
  TOXEL = 'toxel',
  TOXICROAK = 'toxicroak',
  TOXTRICITY = 'toxtricity',
  TOXTRICITYGMAX = 'toxtricitygmax',
  TOXTRICITYLOWKEY = 'toxtricitylowkey',
  TOXTRICITYLOWKEYGMAX = 'toxtricitylowkeygmax',
  TRANQUILL = 'tranquill',
  TRAPINCH = 'trapinch',
  TREECKO = 'treecko',
  TREVENANT = 'trevenant',
  TROPIUS = 'tropius',
  TRUBBISH = 'trubbish',
  TRUMBEAK = 'trumbeak',
  TSAREENA = 'tsareena',
  TURTONATOR = 'turtonator',
  TURTWIG = 'turtwig',
  TYMPOLE = 'tympole',
  TYNAMO = 'tynamo',
  TYPENULL = 'typenull',
  TYPHLOSION = 'typhlosion',
  TYPHLOSIONHISUI = 'typhlosionhisui',
  TYRANITAR = 'tyranitar',
  TYRANITARMEGA = 'tyranitarmega',
  TYRANTRUM = 'tyrantrum',
  TYROGUE = 'tyrogue',
  TYRUNT = 'tyrunt',
  UMBREON = 'umbreon',
  UNFEZANT = 'unfezant',
  UNOWN = 'unown',
  URSALUNA = 'ursaluna',
  URSARING = 'ursaring',
  URSHIFU = 'urshifu',
  URSHIFUGMAX = 'urshifugmax',
  URSHIFURAPIDSTRIKE = 'urshifurapidstrike',
  URSHIFURAPIDSTRIKEGMAX = 'urshifurapidstrikegmax',
  UXIE = 'uxie',
  VANILLISH = 'vanillish',
  VANILLITE = 'vanillite',
  VANILLUXE = 'vanilluxe',
  VAPOREON = 'vaporeon',
  VENIPEDE = 'venipede',
  VENOMICON = 'venomicon',
  VENOMICONEPILOGUE = 'venomiconepilogue',
  VENOMOTH = 'venomoth',
  VENONAT = 'venonat',
  VENUSAUR = 'venusaur',
  VENUSAURGMAX = 'venusaurgmax',
  VENUSAURMEGA = 'venusaurmega',
  VESPIQUEN = 'vespiquen',
  VIBRAVA = 'vibrava',
  VICTINI = 'victini',
  VICTREEBEL = 'victreebel',
  VIGOROTH = 'vigoroth',
  VIKAVOLT = 'vikavolt',
  VIKAVOLTTOTEM = 'vikavolttotem',
  VILEPLUME = 'vileplume',
  VIRIZION = 'virizion',
  VIVILLON = 'vivillon',
  VIVILLONFANCY = 'vivillonfancy',
  VIVILLONPOKEBALL = 'vivillonpokeball',
  VOLBEAT = 'volbeat',
  VOLCANION = 'volcanion',
  VOLCARONA = 'volcarona',
  VOLKRAKEN = 'volkraken',
  VOLKRITTER = 'volkritter',
  VOLTORB = 'voltorb',
  VOLTORBHISUI = 'voltorbhisui',
  VOODOLL = 'voodoll',
  VOODOOM = 'voodoom',
  VULLABY = 'vullaby',
  VULPIX = 'vulpix',
  VULPIXALOLA = 'vulpixalola',
  WAILMER = 'wailmer',
  WAILORD = 'wailord',
  WALREIN = 'walrein',
  WARTORTLE = 'wartortle',
  WATCHOG = 'watchog',
  WEAVILE = 'weavile',
  WEEDLE = 'weedle',
  WEEPINBELL = 'weepinbell',
  WEEZING = 'weezing',
  WEEZINGGALAR = 'weezinggalar',
  WHIMSICOTT = 'whimsicott',
  WHIRLIPEDE = 'whirlipede',
  WHISCASH = 'whiscash',
  WHISMUR = 'whismur',
  WIGGLYTUFF = 'wigglytuff',
  WIMPOD = 'wimpod',
  WINGULL = 'wingull',
  WISHIWASHI = 'wishiwashi',
  WISHIWASHISCHOOL = 'wishiwashischool',
  WOBBUFFET = 'wobbuffet',
  WOOBAT = 'woobat',
  WOOLOO = 'wooloo',
  WOOPER = 'wooper',
  WORMADAM = 'wormadam',
  WORMADAMSANDY = 'wormadamsandy',
  WORMADAMTRASH = 'wormadamtrash',
  WURMPLE = 'wurmple',
  WYNAUT = 'wynaut',
  WYRDEER = 'wyrdeer',
  XATU = 'xatu',
  XERNEAS = 'xerneas',
  XERNEASNEUTRAL = 'xerneasneutral',
  XURKITREE = 'xurkitree',
  YAMASK = 'yamask',
  YAMASKGALAR = 'yamaskgalar',
  YAMPER = 'yamper',
  YANMA = 'yanma',
  YANMEGA = 'yanmega',
  YUNGOOS = 'yungoos',
  YVELTAL = 'yveltal',
  ZACIAN = 'zacian',
  ZACIANCROWNED = 'zaciancrowned',
  ZAMAZENTA = 'zamazenta',
  ZAMAZENTACROWNED = 'zamazentacrowned',
  ZANGOOSE = 'zangoose',
  ZAPDOS = 'zapdos',
  ZAPDOSGALAR = 'zapdosgalar',
  ZARUDE = 'zarude',
  ZARUDEDADA = 'zarudedada',
  ZEBSTRIKA = 'zebstrika',
  ZEKROM = 'zekrom',
  ZERAORA = 'zeraora',
  ZIGZAGOON = 'zigzagoon',
  ZIGZAGOONGALAR = 'zigzagoongalar',
  ZOROARK = 'zoroark',
  ZOROARKHISUI = 'zoroarkhisui',
  ZORUA = 'zorua',
  ZORUAHISUI = 'zoruahisui',
  ZUBAT = 'zubat',
  ZWEILOUS = 'zweilous',
  ZYGARDE = 'zygarde',
  ZYGARDE10 = 'zygarde10',
  ZYGARDECOMPLETE = 'zygardecomplete'
}

export type Query = {
  __typename: 'Query';
  /** Gets the details on a Pokémon ability, using the ability name */
  getAbility: Ability;
  /** Returns a list of all the known Pokémon. This query supports no arguments can it be  */
  getAllPokemonSpecies: Array<Scalars['String']>;
  /**
   * Gets details on a Pokémon ability, using a fuzzy search on name
   * This can be used to find multiple results based on the query
   * By default only 1 result is returned. You can provide the arguments "take", "offset", and "reverse" to modify this behaviour.
   */
  getFuzzyAbility: Array<Ability>;
  /**
   * Gets details on a Pokémon item, using a fuzzy search on name
   * This can be used to find multiple results based on the query
   * By default only 1 result is returned. You can provide the arguments "take", "offset", and "reverse" to modify this behaviour.
   */
  getFuzzyItem: Array<Item>;
  /** Gets the learnset for a given Pokémon and move.A fuzzy search is performed to find a matching Pokémon and moveMultiple moves are possible by putting them in an array: [move1, move2].You can also apply a generation filter (only results for the given generation will be returned) with the generation argument */
  getFuzzyLearnset: Learnset;
  /**
   * Gets details on a Pokémon move, using a fuzzy search on name
   * This can be used to find multiple results based on the query
   * By default only 1 result is returned. You can provide the arguments "take", "offset", and "reverse" to modify this behaviour.
   */
  getFuzzyMove: Array<Move>;
  /**
   * Gets details on one or more Pokémon based on species name
   * You can provide "take" to limit the amount of Pokémon to return (default: 1), set the offset of where to start with "offset", and reverse the entire array with "reverse".
   * You can provide "takeFlavorTexts" to limit the amount of flavour texts to return (default: 1), set the offset of where to start with "offsetFlavorTexts", and reverse the entire array with "reverseFlavorTexts".
   * Reversal is applied before pagination!
   */
  getFuzzyPokemon: Array<Pokemon>;
  /** Gets the details on a Pokémon item, using the item name */
  getItem: Item;
  /** Gets the learnsets for a given Pokémon and move.Multiple moves are possible by putting them in an array: [move1, move2].You can also apply a generation filter (only results for the given generation will be returned) with the generation argument */
  getLearnset: Learnset;
  /** Gets the details on a Pokémon move, using the move name */
  getMove: Move;
  /**
   * Gets details on a single Pokémon based on species name
   * You can provide "takeFlavorTexts" to limit the amount of flavour texts to return, set the offset of where to start with "offsetFlavorTexts", and reverse the entire array with "reverseFlavorTexts".
   * Reversal is applied before pagination!
   */
  getPokemon: Pokemon;
  /**
   * Gets details on a single Pokémon based on National Pokédex number
   * You can provide "takeFlavorTexts" to limit the amount of flavour texts to return, set the offset of where to start with "offsetFlavorTexts", and reverse the entire array with "reverseFlavorTexts".
   * Reversal is applied before pagination!
   */
  getPokemonByDexNumber: Pokemon;
  /** Gets the type matchup data for the given type or types */
  getTypeMatchup: TypeMatchup;
};


export type QueryGetAbilityArgs = {
  ability: AbilitiesEnum;
};


export type QueryGetAllPokemonSpeciesArgs = {
  offset?: InputMaybe<Scalars['Int']>;
  reverse?: InputMaybe<Scalars['Boolean']>;
  take?: InputMaybe<Scalars['Int']>;
};


export type QueryGetFuzzyAbilityArgs = {
  ability: Scalars['String'];
  offset?: InputMaybe<Scalars['Int']>;
  reverse?: InputMaybe<Scalars['Boolean']>;
  take?: InputMaybe<Scalars['Int']>;
};


export type QueryGetFuzzyItemArgs = {
  item: Scalars['String'];
  offset?: InputMaybe<Scalars['Int']>;
  reverse?: InputMaybe<Scalars['Boolean']>;
  take?: InputMaybe<Scalars['Int']>;
};


export type QueryGetFuzzyLearnsetArgs = {
  generation?: InputMaybe<Scalars['Int']>;
  moves: Array<Scalars['String']>;
  pokemon: Scalars['String'];
};


export type QueryGetFuzzyMoveArgs = {
  move: Scalars['String'];
  offset?: InputMaybe<Scalars['Int']>;
  reverse?: InputMaybe<Scalars['Boolean']>;
  take?: InputMaybe<Scalars['Int']>;
};


export type QueryGetFuzzyPokemonArgs = {
  offset?: InputMaybe<Scalars['Int']>;
  offsetFlavorTexts?: InputMaybe<Scalars['Int']>;
  pokemon: Scalars['String'];
  reverse?: InputMaybe<Scalars['Boolean']>;
  reverseFlavorTexts?: InputMaybe<Scalars['Boolean']>;
  take?: InputMaybe<Scalars['Int']>;
  takeFlavorTexts?: InputMaybe<Scalars['Int']>;
};


export type QueryGetItemArgs = {
  item: ItemsEnum;
};


export type QueryGetLearnsetArgs = {
  generation?: InputMaybe<Scalars['Int']>;
  moves: Array<MovesEnum>;
  pokemon: PokemonEnum;
};


export type QueryGetMoveArgs = {
  move: MovesEnum;
};


export type QueryGetPokemonArgs = {
  offsetFlavorTexts?: InputMaybe<Scalars['Int']>;
  pokemon: PokemonEnum;
  reverseFlavorTexts?: InputMaybe<Scalars['Boolean']>;
  takeFlavorTexts?: InputMaybe<Scalars['Int']>;
};


export type QueryGetPokemonByDexNumberArgs = {
  number: Scalars['Int'];
  offsetFlavorTexts?: InputMaybe<Scalars['Int']>;
  reverseFlavorTexts?: InputMaybe<Scalars['Boolean']>;
  takeFlavorTexts?: InputMaybe<Scalars['Int']>;
};


export type QueryGetTypeMatchupArgs = {
  types: Array<TypesEnum>;
};

/** A Pokémon's stats */
export type Stats = {
  __typename: 'Stats';
  /** The base attack stat of a Pokémon */
  attack: Scalars['Int'];
  /** The base defense stat of a Pokémon */
  defense: Scalars['Int'];
  /** The base HP stat of a pokémon */
  hp: Scalars['Int'];
  /** The base special attack stat of a Pokémon */
  specialattack: Scalars['Int'];
  /** The base special defense stat of a Pokémon */
  specialdefense: Scalars['Int'];
  /** The base speed stat of a Pokémon */
  speed: Scalars['Int'];
};

/** A type matchup entry */
export type Type = {
  __typename: 'Type';
  /** The types with 4x effectiveness */
  doubleEffectiveTypes: Array<Scalars['String']>;
  /** The types with 0.25x effectiveness */
  doubleResistedTypes: Array<Scalars['String']>;
  /** The types with 2x effectiveness */
  effectiveTypes: Array<Scalars['String']>;
  /** The types with 0x effectiveness */
  effectlessTypes: Array<Scalars['String']>;
  /** The types with 1x effectiveness */
  normalTypes: Array<Scalars['String']>;
  /** The types with 0.5x effectiveness */
  resistedTypes: Array<Scalars['String']>;
};

/** The type matchups for any one or two given types */
export type TypeMatchup = {
  __typename: 'TypeMatchup';
  /** The type matchups when attacking */
  attacking: Type;
  /** The type matchups when defending */
  defending: Type;
};

/** The types in Pokémon */
export enum TypesEnum {
  BUG = 'bug',
  DARK = 'dark',
  DRAGON = 'dragon',
  ELECTRIC = 'electric',
  FAIRY = 'fairy',
  FIGHTING = 'fighting',
  FIRE = 'fire',
  FLYING = 'flying',
  GHOST = 'ghost',
  GRASS = 'grass',
  GROUND = 'ground',
  ICE = 'ice',
  NORMAL = 'normal',
  POISON = 'poison',
  PSYCHIC = 'psychic',
  ROCK = 'rock',
  STEEL = 'steel',
  WATER = 'water'
}

export type AbilitiesKeySpecifier = ('first' | 'hidden' | 'second' | 'special' | AbilitiesKeySpecifier)[];
export type AbilitiesFieldPolicy = {
	first?: FieldPolicy<any> | FieldReadFunction<any>,
	hidden?: FieldPolicy<any> | FieldReadFunction<any>,
	second?: FieldPolicy<any> | FieldReadFunction<any>,
	special?: FieldPolicy<any> | FieldReadFunction<any>
};
export type AbilityKeySpecifier = ('bulbapediaPage' | 'desc' | 'isFieldAbility' | 'key' | 'name' | 'serebiiPage' | 'shortDesc' | 'smogonPage' | AbilityKeySpecifier)[];
export type AbilityFieldPolicy = {
	bulbapediaPage?: FieldPolicy<any> | FieldReadFunction<any>,
	desc?: FieldPolicy<any> | FieldReadFunction<any>,
	isFieldAbility?: FieldPolicy<any> | FieldReadFunction<any>,
	key?: FieldPolicy<any> | FieldReadFunction<any>,
	name?: FieldPolicy<any> | FieldReadFunction<any>,
	serebiiPage?: FieldPolicy<any> | FieldReadFunction<any>,
	shortDesc?: FieldPolicy<any> | FieldReadFunction<any>,
	smogonPage?: FieldPolicy<any> | FieldReadFunction<any>
};
export type CatchRateKeySpecifier = ('base' | 'percentageWithOrdinaryPokeballAtFullHealth' | CatchRateKeySpecifier)[];
export type CatchRateFieldPolicy = {
	base?: FieldPolicy<any> | FieldReadFunction<any>,
	percentageWithOrdinaryPokeballAtFullHealth?: FieldPolicy<any> | FieldReadFunction<any>
};
export type EvYieldsKeySpecifier = ('attack' | 'defense' | 'hp' | 'specialattack' | 'specialdefense' | 'speed' | EvYieldsKeySpecifier)[];
export type EvYieldsFieldPolicy = {
	attack?: FieldPolicy<any> | FieldReadFunction<any>,
	defense?: FieldPolicy<any> | FieldReadFunction<any>,
	hp?: FieldPolicy<any> | FieldReadFunction<any>,
	specialattack?: FieldPolicy<any> | FieldReadFunction<any>,
	specialdefense?: FieldPolicy<any> | FieldReadFunction<any>,
	speed?: FieldPolicy<any> | FieldReadFunction<any>
};
export type FlavorKeySpecifier = ('flavor' | 'game' | FlavorKeySpecifier)[];
export type FlavorFieldPolicy = {
	flavor?: FieldPolicy<any> | FieldReadFunction<any>,
	game?: FieldPolicy<any> | FieldReadFunction<any>
};
export type GenderKeySpecifier = ('female' | 'male' | GenderKeySpecifier)[];
export type GenderFieldPolicy = {
	female?: FieldPolicy<any> | FieldReadFunction<any>,
	male?: FieldPolicy<any> | FieldReadFunction<any>
};
export type ItemKeySpecifier = ('bulbapediaPage' | 'desc' | 'generationIntroduced' | 'isNonstandard' | 'key' | 'name' | 'serebiiPage' | 'shortDesc' | 'smogonPage' | 'sprite' | ItemKeySpecifier)[];
export type ItemFieldPolicy = {
	bulbapediaPage?: FieldPolicy<any> | FieldReadFunction<any>,
	desc?: FieldPolicy<any> | FieldReadFunction<any>,
	generationIntroduced?: FieldPolicy<any> | FieldReadFunction<any>,
	isNonstandard?: FieldPolicy<any> | FieldReadFunction<any>,
	key?: FieldPolicy<any> | FieldReadFunction<any>,
	name?: FieldPolicy<any> | FieldReadFunction<any>,
	serebiiPage?: FieldPolicy<any> | FieldReadFunction<any>,
	shortDesc?: FieldPolicy<any> | FieldReadFunction<any>,
	smogonPage?: FieldPolicy<any> | FieldReadFunction<any>,
	sprite?: FieldPolicy<any> | FieldReadFunction<any>
};
export type LearnsetKeySpecifier = ('backSprite' | 'color' | 'dreamworldMoves' | 'eggMoves' | 'eventMoves' | 'levelUpMoves' | 'num' | 'pokemonKey' | 'shinyBackSprite' | 'shinySprite' | 'species' | 'sprite' | 'tmMoves' | 'tutorMoves' | 'virtualTransferMoves' | LearnsetKeySpecifier)[];
export type LearnsetFieldPolicy = {
	backSprite?: FieldPolicy<any> | FieldReadFunction<any>,
	color?: FieldPolicy<any> | FieldReadFunction<any>,
	dreamworldMoves?: FieldPolicy<any> | FieldReadFunction<any>,
	eggMoves?: FieldPolicy<any> | FieldReadFunction<any>,
	eventMoves?: FieldPolicy<any> | FieldReadFunction<any>,
	levelUpMoves?: FieldPolicy<any> | FieldReadFunction<any>,
	num?: FieldPolicy<any> | FieldReadFunction<any>,
	pokemonKey?: FieldPolicy<any> | FieldReadFunction<any>,
	shinyBackSprite?: FieldPolicy<any> | FieldReadFunction<any>,
	shinySprite?: FieldPolicy<any> | FieldReadFunction<any>,
	species?: FieldPolicy<any> | FieldReadFunction<any>,
	sprite?: FieldPolicy<any> | FieldReadFunction<any>,
	tmMoves?: FieldPolicy<any> | FieldReadFunction<any>,
	tutorMoves?: FieldPolicy<any> | FieldReadFunction<any>,
	virtualTransferMoves?: FieldPolicy<any> | FieldReadFunction<any>
};
export type LearnsetLevelUpMoveKeySpecifier = ('generation' | 'level' | 'name' | LearnsetLevelUpMoveKeySpecifier)[];
export type LearnsetLevelUpMoveFieldPolicy = {
	generation?: FieldPolicy<any> | FieldReadFunction<any>,
	level?: FieldPolicy<any> | FieldReadFunction<any>,
	name?: FieldPolicy<any> | FieldReadFunction<any>
};
export type LearnsetMoveKeySpecifier = ('generation' | 'name' | LearnsetMoveKeySpecifier)[];
export type LearnsetMoveFieldPolicy = {
	generation?: FieldPolicy<any> | FieldReadFunction<any>,
	name?: FieldPolicy<any> | FieldReadFunction<any>
};
export type MoveKeySpecifier = ('accuracy' | 'basePower' | 'bulbapediaPage' | 'category' | 'contestType' | 'desc' | 'isFieldMove' | 'isGMax' | 'isNonstandard' | 'isZ' | 'key' | 'maxMovePower' | 'name' | 'pp' | 'priority' | 'serebiiPage' | 'shortDesc' | 'smogonPage' | 'target' | 'type' | 'zMovePower' | MoveKeySpecifier)[];
export type MoveFieldPolicy = {
	accuracy?: FieldPolicy<any> | FieldReadFunction<any>,
	basePower?: FieldPolicy<any> | FieldReadFunction<any>,
	bulbapediaPage?: FieldPolicy<any> | FieldReadFunction<any>,
	category?: FieldPolicy<any> | FieldReadFunction<any>,
	contestType?: FieldPolicy<any> | FieldReadFunction<any>,
	desc?: FieldPolicy<any> | FieldReadFunction<any>,
	isFieldMove?: FieldPolicy<any> | FieldReadFunction<any>,
	isGMax?: FieldPolicy<any> | FieldReadFunction<any>,
	isNonstandard?: FieldPolicy<any> | FieldReadFunction<any>,
	isZ?: FieldPolicy<any> | FieldReadFunction<any>,
	key?: FieldPolicy<any> | FieldReadFunction<any>,
	maxMovePower?: FieldPolicy<any> | FieldReadFunction<any>,
	name?: FieldPolicy<any> | FieldReadFunction<any>,
	pp?: FieldPolicy<any> | FieldReadFunction<any>,
	priority?: FieldPolicy<any> | FieldReadFunction<any>,
	serebiiPage?: FieldPolicy<any> | FieldReadFunction<any>,
	shortDesc?: FieldPolicy<any> | FieldReadFunction<any>,
	smogonPage?: FieldPolicy<any> | FieldReadFunction<any>,
	target?: FieldPolicy<any> | FieldReadFunction<any>,
	type?: FieldPolicy<any> | FieldReadFunction<any>,
	zMovePower?: FieldPolicy<any> | FieldReadFunction<any>
};
export type PokemonKeySpecifier = ('abilities' | 'backSprite' | 'baseForme' | 'baseSpecies' | 'baseStats' | 'baseStatsTotal' | 'bulbapediaPage' | 'catchRate' | 'color' | 'cosmeticFormes' | 'eggGroups' | 'evYields' | 'evolutionLevel' | 'evolutions' | 'flavorTexts' | 'forme' | 'formeLetter' | 'gender' | 'height' | 'isEggObtainable' | 'key' | 'levellingRate' | 'maximumHatchTime' | 'minimumHatchTime' | 'num' | 'otherFormes' | 'preevolutions' | 'serebiiPage' | 'shinyBackSprite' | 'shinySprite' | 'smogonPage' | 'smogonTier' | 'species' | 'sprite' | 'types' | 'weight' | PokemonKeySpecifier)[];
export type PokemonFieldPolicy = {
	abilities?: FieldPolicy<any> | FieldReadFunction<any>,
	backSprite?: FieldPolicy<any> | FieldReadFunction<any>,
	baseForme?: FieldPolicy<any> | FieldReadFunction<any>,
	baseSpecies?: FieldPolicy<any> | FieldReadFunction<any>,
	baseStats?: FieldPolicy<any> | FieldReadFunction<any>,
	baseStatsTotal?: FieldPolicy<any> | FieldReadFunction<any>,
	bulbapediaPage?: FieldPolicy<any> | FieldReadFunction<any>,
	catchRate?: FieldPolicy<any> | FieldReadFunction<any>,
	color?: FieldPolicy<any> | FieldReadFunction<any>,
	cosmeticFormes?: FieldPolicy<any> | FieldReadFunction<any>,
	eggGroups?: FieldPolicy<any> | FieldReadFunction<any>,
	evYields?: FieldPolicy<any> | FieldReadFunction<any>,
	evolutionLevel?: FieldPolicy<any> | FieldReadFunction<any>,
	evolutions?: FieldPolicy<any> | FieldReadFunction<any>,
	flavorTexts?: FieldPolicy<any> | FieldReadFunction<any>,
	forme?: FieldPolicy<any> | FieldReadFunction<any>,
	formeLetter?: FieldPolicy<any> | FieldReadFunction<any>,
	gender?: FieldPolicy<any> | FieldReadFunction<any>,
	height?: FieldPolicy<any> | FieldReadFunction<any>,
	isEggObtainable?: FieldPolicy<any> | FieldReadFunction<any>,
	key?: FieldPolicy<any> | FieldReadFunction<any>,
	levellingRate?: FieldPolicy<any> | FieldReadFunction<any>,
	maximumHatchTime?: FieldPolicy<any> | FieldReadFunction<any>,
	minimumHatchTime?: FieldPolicy<any> | FieldReadFunction<any>,
	num?: FieldPolicy<any> | FieldReadFunction<any>,
	otherFormes?: FieldPolicy<any> | FieldReadFunction<any>,
	preevolutions?: FieldPolicy<any> | FieldReadFunction<any>,
	serebiiPage?: FieldPolicy<any> | FieldReadFunction<any>,
	shinyBackSprite?: FieldPolicy<any> | FieldReadFunction<any>,
	shinySprite?: FieldPolicy<any> | FieldReadFunction<any>,
	smogonPage?: FieldPolicy<any> | FieldReadFunction<any>,
	smogonTier?: FieldPolicy<any> | FieldReadFunction<any>,
	species?: FieldPolicy<any> | FieldReadFunction<any>,
	sprite?: FieldPolicy<any> | FieldReadFunction<any>,
	types?: FieldPolicy<any> | FieldReadFunction<any>,
	weight?: FieldPolicy<any> | FieldReadFunction<any>
};
export type QueryKeySpecifier = ('getAbility' | 'getAllPokemonSpecies' | 'getFuzzyAbility' | 'getFuzzyItem' | 'getFuzzyLearnset' | 'getFuzzyMove' | 'getFuzzyPokemon' | 'getItem' | 'getLearnset' | 'getMove' | 'getPokemon' | 'getPokemonByDexNumber' | 'getTypeMatchup' | QueryKeySpecifier)[];
export type QueryFieldPolicy = {
	getAbility?: FieldPolicy<any> | FieldReadFunction<any>,
	getAllPokemonSpecies?: FieldPolicy<any> | FieldReadFunction<any>,
	getFuzzyAbility?: FieldPolicy<any> | FieldReadFunction<any>,
	getFuzzyItem?: FieldPolicy<any> | FieldReadFunction<any>,
	getFuzzyLearnset?: FieldPolicy<any> | FieldReadFunction<any>,
	getFuzzyMove?: FieldPolicy<any> | FieldReadFunction<any>,
	getFuzzyPokemon?: FieldPolicy<any> | FieldReadFunction<any>,
	getItem?: FieldPolicy<any> | FieldReadFunction<any>,
	getLearnset?: FieldPolicy<any> | FieldReadFunction<any>,
	getMove?: FieldPolicy<any> | FieldReadFunction<any>,
	getPokemon?: FieldPolicy<any> | FieldReadFunction<any>,
	getPokemonByDexNumber?: FieldPolicy<any> | FieldReadFunction<any>,
	getTypeMatchup?: FieldPolicy<any> | FieldReadFunction<any>
};
export type StatsKeySpecifier = ('attack' | 'defense' | 'hp' | 'specialattack' | 'specialdefense' | 'speed' | StatsKeySpecifier)[];
export type StatsFieldPolicy = {
	attack?: FieldPolicy<any> | FieldReadFunction<any>,
	defense?: FieldPolicy<any> | FieldReadFunction<any>,
	hp?: FieldPolicy<any> | FieldReadFunction<any>,
	specialattack?: FieldPolicy<any> | FieldReadFunction<any>,
	specialdefense?: FieldPolicy<any> | FieldReadFunction<any>,
	speed?: FieldPolicy<any> | FieldReadFunction<any>
};
export type TypeKeySpecifier = ('doubleEffectiveTypes' | 'doubleResistedTypes' | 'effectiveTypes' | 'effectlessTypes' | 'normalTypes' | 'resistedTypes' | TypeKeySpecifier)[];
export type TypeFieldPolicy = {
	doubleEffectiveTypes?: FieldPolicy<any> | FieldReadFunction<any>,
	doubleResistedTypes?: FieldPolicy<any> | FieldReadFunction<any>,
	effectiveTypes?: FieldPolicy<any> | FieldReadFunction<any>,
	effectlessTypes?: FieldPolicy<any> | FieldReadFunction<any>,
	normalTypes?: FieldPolicy<any> | FieldReadFunction<any>,
	resistedTypes?: FieldPolicy<any> | FieldReadFunction<any>
};
export type TypeMatchupKeySpecifier = ('attacking' | 'defending' | TypeMatchupKeySpecifier)[];
export type TypeMatchupFieldPolicy = {
	attacking?: FieldPolicy<any> | FieldReadFunction<any>,
	defending?: FieldPolicy<any> | FieldReadFunction<any>
};
export type StrictTypedTypePolicies = {
	Abilities?: Omit<TypePolicy, "fields" | "keyFields"> & {
		keyFields?: false | AbilitiesKeySpecifier | (() => undefined | AbilitiesKeySpecifier),
		fields?: AbilitiesFieldPolicy,
	},
	Ability?: Omit<TypePolicy, "fields" | "keyFields"> & {
		keyFields?: false | AbilityKeySpecifier | (() => undefined | AbilityKeySpecifier),
		fields?: AbilityFieldPolicy,
	},
	CatchRate?: Omit<TypePolicy, "fields" | "keyFields"> & {
		keyFields?: false | CatchRateKeySpecifier | (() => undefined | CatchRateKeySpecifier),
		fields?: CatchRateFieldPolicy,
	},
	EvYields?: Omit<TypePolicy, "fields" | "keyFields"> & {
		keyFields?: false | EvYieldsKeySpecifier | (() => undefined | EvYieldsKeySpecifier),
		fields?: EvYieldsFieldPolicy,
	},
	Flavor?: Omit<TypePolicy, "fields" | "keyFields"> & {
		keyFields?: false | FlavorKeySpecifier | (() => undefined | FlavorKeySpecifier),
		fields?: FlavorFieldPolicy,
	},
	Gender?: Omit<TypePolicy, "fields" | "keyFields"> & {
		keyFields?: false | GenderKeySpecifier | (() => undefined | GenderKeySpecifier),
		fields?: GenderFieldPolicy,
	},
	Item?: Omit<TypePolicy, "fields" | "keyFields"> & {
		keyFields?: false | ItemKeySpecifier | (() => undefined | ItemKeySpecifier),
		fields?: ItemFieldPolicy,
	},
	Learnset?: Omit<TypePolicy, "fields" | "keyFields"> & {
		keyFields?: false | LearnsetKeySpecifier | (() => undefined | LearnsetKeySpecifier),
		fields?: LearnsetFieldPolicy,
	},
	LearnsetLevelUpMove?: Omit<TypePolicy, "fields" | "keyFields"> & {
		keyFields?: false | LearnsetLevelUpMoveKeySpecifier | (() => undefined | LearnsetLevelUpMoveKeySpecifier),
		fields?: LearnsetLevelUpMoveFieldPolicy,
	},
	LearnsetMove?: Omit<TypePolicy, "fields" | "keyFields"> & {
		keyFields?: false | LearnsetMoveKeySpecifier | (() => undefined | LearnsetMoveKeySpecifier),
		fields?: LearnsetMoveFieldPolicy,
	},
	Move?: Omit<TypePolicy, "fields" | "keyFields"> & {
		keyFields?: false | MoveKeySpecifier | (() => undefined | MoveKeySpecifier),
		fields?: MoveFieldPolicy,
	},
	Pokemon?: Omit<TypePolicy, "fields" | "keyFields"> & {
		keyFields?: false | PokemonKeySpecifier | (() => undefined | PokemonKeySpecifier),
		fields?: PokemonFieldPolicy,
	},
	Query?: Omit<TypePolicy, "fields" | "keyFields"> & {
		keyFields?: false | QueryKeySpecifier | (() => undefined | QueryKeySpecifier),
		fields?: QueryFieldPolicy,
	},
	Stats?: Omit<TypePolicy, "fields" | "keyFields"> & {
		keyFields?: false | StatsKeySpecifier | (() => undefined | StatsKeySpecifier),
		fields?: StatsFieldPolicy,
	},
	Type?: Omit<TypePolicy, "fields" | "keyFields"> & {
		keyFields?: false | TypeKeySpecifier | (() => undefined | TypeKeySpecifier),
		fields?: TypeFieldPolicy,
	},
	TypeMatchup?: Omit<TypePolicy, "fields" | "keyFields"> & {
		keyFields?: false | TypeMatchupKeySpecifier | (() => undefined | TypeMatchupKeySpecifier),
		fields?: TypeMatchupFieldPolicy,
	}
};
export type TypedTypePolicies = StrictTypedTypePolicies & TypePolicies;
export type PokemonBasicInfoFragmentFragment = { __typename: 'Pokemon', num: number, species: string, sprite: string, backSprite: string, shinySprite: string, shinyBackSprite: string, types: Array<string> };

export type PokemonExtraInfoFragmentFragment = { __typename: 'Pokemon', color: string, evolutionLevel?: string, height: number, weight: number, gender: { __typename: 'Gender', female: string, male: string } };

export type PokemonStatsFragmentFragment = { __typename: 'Pokemon', baseStats: { __typename: 'Stats', hp: number, attack: number, defense: number, specialattack: number, specialdefense: number, speed: number } };

export type PokemonAbilitiesFragmentFragment = { __typename: 'Pokemon', abilities: { __typename: 'Abilities', first: string, hidden?: string, second?: string, special?: string } };

export type PokemonTypeFragment = { __typename: 'Type', doubleEffectiveTypes: Array<string>, doubleResistedTypes: Array<string>, effectiveTypes: Array<string>, effectlessTypes: Array<string>, normalTypes: Array<string>, resistedTypes: Array<string> };

export type GetAbilityFullQueryVariables = Exact<{
  ability: AbilitiesEnum;
}>;


export type GetAbilityFullQuery = { __typename: 'Query', getAbility: { __typename: 'Ability', desc?: string, isFieldAbility?: string, name: string, shortDesc: string, serebiiPage: string, smogonPage: string, bulbapediaPage: string } };

export type GetAbilityPartialQueryVariables = Exact<{
  ability: AbilitiesEnum;
}>;


export type GetAbilityPartialQuery = { __typename: 'Query', getAbility: { __typename: 'Ability', desc?: string, isFieldAbility?: string, name: string, shortDesc: string } };

export type GetFuzzyAbilityQueryVariables = Exact<{
  ability: Scalars['String'];
  take?: InputMaybe<Scalars['Int']>;
  reverse?: InputMaybe<Scalars['Boolean']>;
}>;


export type GetFuzzyAbilityQuery = { __typename: 'Query', getFuzzyAbility: Array<{ __typename: 'Ability', desc?: string, isFieldAbility?: string, name: string, shortDesc: string }> };

export type GetFuzzyMoveNameQueryVariables = Exact<{
  move: Scalars['String'];
  take?: InputMaybe<Scalars['Int']>;
  reverse?: InputMaybe<Scalars['Boolean']>;
}>;


export type GetFuzzyMoveNameQuery = { __typename: 'Query', getFuzzyMove: Array<{ __typename: 'Move', name: string }> };

export type GetFuzzyMovePartialQueryVariables = Exact<{
  move: Scalars['String'];
  take?: InputMaybe<Scalars['Int']>;
  reverse?: InputMaybe<Scalars['Boolean']>;
}>;


export type GetFuzzyMovePartialQuery = { __typename: 'Query', getFuzzyMove: Array<{ __typename: 'Move', accuracy: number, maxMovePower?: number, name: string, pp: number, shortDesc: string, type: string, basePower: string, category: string, desc?: string }> };

export type GetFuzzyLearnsetQueryVariables = Exact<{
  pokemon: Scalars['String'];
  moves: Array<Scalars['String']> | Scalars['String'];
  generation?: InputMaybe<Scalars['Int']>;
}>;


export type GetFuzzyLearnsetQuery = { __typename: 'Query', getFuzzyLearnset: { __typename: 'Learnset', species: string, tmMoves?: Array<{ __typename: 'LearnsetMove', name?: string, generation?: number }>, virtualTransferMoves?: Array<{ __typename: 'LearnsetMove', name?: string, generation?: number }>, dreamworldMoves?: Array<{ __typename: 'LearnsetMove', name?: string, generation?: number }>, eggMoves?: Array<{ __typename: 'LearnsetMove', name?: string, generation?: number }>, eventMoves?: Array<{ __typename: 'LearnsetMove', name?: string, generation?: number }>, levelUpMoves?: Array<{ __typename: 'LearnsetLevelUpMove', name?: string, level?: number, generation?: number }>, tutorMoves?: Array<{ __typename: 'LearnsetMove', name?: string, generation?: number }> } };

export type GetFuzzyMoveWithFullDataQueryVariables = Exact<{
  move: Scalars['String'];
  take?: InputMaybe<Scalars['Int']>;
  reverse?: InputMaybe<Scalars['Boolean']>;
}>;


export type GetFuzzyMoveWithFullDataQuery = { __typename: 'Query', getFuzzyMove: Array<{ __typename: 'Move', accuracy: number, maxMovePower?: number, name: string, pp: number, priority: number, serebiiPage: string, shortDesc: string, smogonPage: string, target: string, type: string, zMovePower: number, basePower: string, bulbapediaPage: string, category: string, contestType?: string, desc?: string, isFieldMove?: string, isGMax?: string, isNonstandard?: string, isZ?: string }> };

export type GetPokemonQueryVariables = Exact<{
  name: PokemonEnum;
}>;


export type GetPokemonQuery = { __typename: 'Query', getPokemon: { __typename: 'Pokemon', num: number, species: string, sprite: string, backSprite: string, shinySprite: string, shinyBackSprite: string, types: Array<string>, color: string, evolutionLevel?: string, height: number, weight: number, preevolutions?: Array<{ __typename: 'Pokemon', num: number, species: string, sprite: string, backSprite: string, shinySprite: string, shinyBackSprite: string, types: Array<string> }>, evolutions?: Array<{ __typename: 'Pokemon', num: number, species: string, sprite: string, backSprite: string, shinySprite: string, shinyBackSprite: string, types: Array<string> }>, flavorTexts: Array<{ __typename: 'Flavor', flavor: string }>, gender: { __typename: 'Gender', female: string, male: string }, baseStats: { __typename: 'Stats', hp: number, attack: number, defense: number, specialattack: number, specialdefense: number, speed: number }, abilities: { __typename: 'Abilities', first: string, hidden?: string, second?: string, special?: string } } };

export type GetPokemonByDexNumberQueryVariables = Exact<{
  number: Scalars['Int'];
}>;


export type GetPokemonByDexNumberQuery = { __typename: 'Query', getPokemonByDexNumber: { __typename: 'Pokemon', num: number, species: string, sprite: string, backSprite: string, shinySprite: string, shinyBackSprite: string, types: Array<string>, color: string, evolutionLevel?: string, height: number, weight: number, preevolutions?: Array<{ __typename: 'Pokemon', num: number, species: string, sprite: string, backSprite: string, shinySprite: string, shinyBackSprite: string, types: Array<string> }>, evolutions?: Array<{ __typename: 'Pokemon', num: number, species: string, sprite: string, backSprite: string, shinySprite: string, shinyBackSprite: string, types: Array<string> }>, flavorTexts: Array<{ __typename: 'Flavor', flavor: string }>, gender: { __typename: 'Gender', female: string, male: string }, baseStats: { __typename: 'Stats', hp: number, attack: number, defense: number, specialattack: number, specialdefense: number, speed: number }, abilities: { __typename: 'Abilities', first: string, hidden?: string, second?: string, special?: string } } };

export type GetFuzzyPokemonQueryVariables = Exact<{
  pokemon: Scalars['String'];
  take?: InputMaybe<Scalars['Int']>;
  reverse?: InputMaybe<Scalars['Boolean']>;
}>;


export type GetFuzzyPokemonQuery = { __typename: 'Query', getFuzzyPokemon: Array<{ __typename: 'Pokemon', species: string, num: number }> };

export type GetFuzzyPokemonsQueryVariables = Exact<{
  pokemon: Scalars['String'];
  take?: InputMaybe<Scalars['Int']>;
  reverse?: InputMaybe<Scalars['Boolean']>;
}>;


export type GetFuzzyPokemonsQuery = { __typename: 'Query', getFuzzyPokemon: Array<{ __typename: 'Pokemon', species: string }> };

export type GetAllPokemonSpeciesQueryVariables = Exact<{
  offset?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  reverse?: InputMaybe<Scalars['Boolean']>;
}>;


export type GetAllPokemonSpeciesQuery = { __typename: 'Query', getAllPokemonSpecies: Array<string> };

export type GetTypeMatchupQueryVariables = Exact<{
  types: Array<TypesEnum> | TypesEnum;
}>;


export type GetTypeMatchupQuery = { __typename: 'Query', getTypeMatchup: { __typename: 'TypeMatchup', attacking: { __typename: 'Type', doubleEffectiveTypes: Array<string>, doubleResistedTypes: Array<string>, effectiveTypes: Array<string>, effectlessTypes: Array<string>, normalTypes: Array<string>, resistedTypes: Array<string> }, defending: { __typename: 'Type', doubleEffectiveTypes: Array<string>, doubleResistedTypes: Array<string>, effectiveTypes: Array<string>, effectlessTypes: Array<string>, normalTypes: Array<string>, resistedTypes: Array<string> } } };

export const namedOperations = {
  Query: {
    getAbilityFull: 'getAbilityFull',
    getAbilityPartial: 'getAbilityPartial',
    getFuzzyAbility: 'getFuzzyAbility',
    getFuzzyMoveName: 'getFuzzyMoveName',
    getFuzzyMovePartial: 'getFuzzyMovePartial',
    getFuzzyLearnset: 'getFuzzyLearnset',
    getFuzzyMoveWithFullData: 'getFuzzyMoveWithFullData',
    getPokemon: 'getPokemon',
    getPokemonByDexNumber: 'getPokemonByDexNumber',
    getFuzzyPokemon: 'getFuzzyPokemon',
    getFuzzyPokemons: 'getFuzzyPokemons',
    getAllPokemonSpecies: 'getAllPokemonSpecies',
    getTypeMatchup: 'getTypeMatchup'
  },
  Fragment: {
    PokemonBasicInfoFragment: 'PokemonBasicInfoFragment',
    PokemonExtraInfoFragment: 'PokemonExtraInfoFragment',
    PokemonStatsFragment: 'PokemonStatsFragment',
    PokemonAbilitiesFragment: 'PokemonAbilitiesFragment',
    PokemonType: 'PokemonType'
  }
}